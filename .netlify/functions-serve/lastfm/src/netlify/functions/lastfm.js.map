{
  "version": 3,
  "sources": ["../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/stub/symbol.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/utils.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/helpers/miscellaneous.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/helpers/webidl.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/simple-queue.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/generic-reader.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/abstract-ops/internal-methods.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/stub/number-isfinite.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/stub/math-trunc.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/basic.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/readable-stream.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/default-reader.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/target/es2018/stub/async-iterator-prototype.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/async-iterator.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/stub/number-isnan.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/abstract-ops/ecmascript.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/abstract-ops/miscellaneous.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/abstract-ops/queue-with-sizes.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/byte-stream-controller.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/byob-reader.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/abstract-ops/queuing-strategy.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/underlying-sink.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/writable-stream.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/abort-signal.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/writable-stream.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/stub/native.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/stub/dom-exception.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/pipe.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/default-controller.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream/tee.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/underlying-source.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/reader-options.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/iterator-options.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/pipe-options.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/readable-writable-pair.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/readable-stream.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy-init.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/byte-length-queuing-strategy.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/count-queuing-strategy.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/validators/transformer.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/web-streams-polyfill/src/lib/transform-stream.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/fetch-blob/streams.cjs", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/fetch-blob/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/fetch-blob/file.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/formdata-polyfill/esm.min.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-domexception/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/fetch-blob/from.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/utils/multipart-parser.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-what/lib/commonjs/types.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-what/lib/commonjs/parse.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-what/lib/commonjs/stringify.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-what/lib/commonjs/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/boolbase/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/data-uri-to-buffer/src/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/body.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/errors/base.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/errors/fetch-error.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/utils/is.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/headers.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/utils/is-redirect.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/response.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/request.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/utils/get-search.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/utils/referrer.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/node-fetch/src/errors/abort-error.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/options.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/static.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domelementtype/lib/esm/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domhandler/lib/esm/node.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domhandler/lib/esm/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/decode_codepoint.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/decode.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/escape.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/entities/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/dom-serializer/lib/esm/foreignNames.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/dom-serializer/lib/esm/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/stringify.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/traversal.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/manipulation.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/querying.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/legacy.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/helpers.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/domutils/lib/esm/feeds.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/api/api/attributes.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/utils.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/api/api/traversing.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio-select/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/compile.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/sort.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/attributes.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/nth-check/lib/esm/parse.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/nth-check/lib/esm/compile.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/nth-check/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/filters.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/pseudos.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/aliases.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/subselects.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/css-select/lib/esm/general.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio-select/lib/esm/positionals.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio-select/lib/esm/helpers.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/api/api/manipulation.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/parse.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/api/api/css.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/api/api/forms.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/cheerio.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/load.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/common/unicode.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/common/error-codes.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/tokenizer/preprocessor.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/common/token.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/common/html.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/tokenizer/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/parser/open-element-stack.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/parser/formatting-element-list.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/tree-adapters/default.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/common/doctype.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/common/foreign-content.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/parser/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/serializer/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5/dist/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/parse5-htmlparser2-tree-adapter/dist/index.js", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/parsers/parsers/parse5-adapter.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/htmlparser2/lib/esm/Tokenizer.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/htmlparser2/lib/esm/Parser.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/htmlparser2/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/node_modules/cheerio/lib/esm/index.ts", "../../../../../../Users/starbist/Workspace/silvestar.codes/netlify/functions/lastfm.mjs"],
  "sourceRoot": "/var/folders/2y/fjbq_y8j25q5ck47tdxj6kww0000gn/T/tmp-63591-cKI1ZHOX60HE",
  "sourcesContent": ["/// <reference lib=\"es2015.symbol\" />\n\nconst SymbolPolyfill: (description?: string) => symbol =\n  typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    description => `Symbol(${description})` as any as symbol;\n\nexport default SymbolPolyfill;\n", "/// <reference lib=\"dom\" />\n\nexport function noop(): undefined {\n  return undefined;\n}\n\nfunction getGlobals() {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n", "import { noop } from '../../utils';\nimport { AssertionError } from '../../stub/assert';\n\nexport function typeIsObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport const rethrowAssertionErrorRejection: (e: any) => void =\n  DEBUG ? e => {\n    // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n    // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n    // expect any errors, but assertion errors are always problematic.\n    if (e && e instanceof AssertionError) {\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    }\n  } : noop;\n", "import { globals } from '../../utils';\nimport { rethrowAssertionErrorRejection } from './miscellaneous';\nimport assert from '../../stub/assert';\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseResolve = Promise.resolve.bind(originalPromise);\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\n\nexport function newPromise<T>(executor: (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void\n) => void): Promise<T> {\n  return new originalPromise(executor);\n}\n\nexport function promiseResolvedWith<T>(value: T | PromiseLike<T>): Promise<T> {\n  return originalPromiseResolve(value);\n}\n\nexport function promiseRejectedWith<T = never>(reason: any): Promise<T> {\n  return originalPromiseReject(reason);\n}\n\nexport function PerformPromiseThen<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  onRejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n  // approximation.\n  return originalPromiseThen.call(promise, onFulfilled, onRejected) as Promise<TResult1 | TResult2>;\n}\n\nexport function uponPromise<T>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => void | PromiseLike<void>,\n  onRejected?: (reason: any) => void | PromiseLike<void>): void {\n  PerformPromiseThen(\n    PerformPromiseThen(promise, onFulfilled, onRejected),\n    undefined,\n    rethrowAssertionErrorRejection\n  );\n}\n\nexport function uponFulfillment<T>(promise: Promise<T>, onFulfilled: (value: T) => void | PromiseLike<void>): void {\n  uponPromise(promise, onFulfilled);\n}\n\nexport function uponRejection(promise: Promise<unknown>, onRejected: (reason: any) => void | PromiseLike<void>): void {\n  uponPromise(promise, undefined, onRejected);\n}\n\nexport function transformPromiseWith<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  fulfillmentHandler?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  rejectionHandler?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\n\nexport function setPromiseIsHandledToTrue(promise: Promise<unknown>): void {\n  PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\n\nexport const queueMicrotask: (fn: () => void) => void = (() => {\n  const globalQueueMicrotask = globals && globals.queueMicrotask;\n  if (typeof globalQueueMicrotask === 'function') {\n    return globalQueueMicrotask;\n  }\n\n  const resolvedPromise = promiseResolvedWith(undefined);\n  return (fn: () => void) => PerformPromiseThen(resolvedPromise, fn);\n})();\n\nexport function reflectCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R, V: T, args: A): R {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexport function promiseCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R | PromiseLike<R>,\n                                                   V: T,\n                                                   args: A): Promise<R> {\n  assert(typeof F === 'function');\n  assert(V !== undefined);\n  assert(Array.isArray(args));\n  try {\n    return promiseResolvedWith(reflectCall(F, V, args));\n  } catch (value) {\n    return promiseRejectedWith(value);\n  }\n}\n", "import assert from '../stub/assert';\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n\ninterface Node<T> {\n  _elements: T[];\n  _next: Node<T> | undefined;\n}\n\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nexport class SimpleQueue<T> {\n  private _front: Node<T>;\n  private _back: Node<T>;\n  private _cursor = 0;\n  private _size = 0;\n\n  constructor() {\n    // _front and _back are always defined.\n    this._front = {\n      _elements: [],\n      _next: undefined\n    };\n    this._back = this._front;\n    // The cursor is used to avoid calling Array.shift().\n    // It contains the index of the front element of the array inside the\n    // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n    this._cursor = 0;\n    // When there is only one node, size === elements.length - cursor.\n    this._size = 0;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n\n  // For exception safety, this method is structured in order:\n  // 1. Read state\n  // 2. Calculate required state mutations\n  // 3. Perform state mutations\n  push(element: T): void {\n    const oldBack = this._back;\n    let newBack = oldBack;\n    assert(oldBack._next === undefined);\n    if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n      newBack = {\n        _elements: [],\n        _next: undefined\n      };\n    }\n\n    // push() is the mutation most likely to throw an exception, so it\n    // goes first.\n    oldBack._elements.push(element);\n    if (newBack !== oldBack) {\n      this._back = newBack;\n      oldBack._next = newBack;\n    }\n    ++this._size;\n  }\n\n  // Like push(), shift() follows the read -> calculate -> mutate pattern for\n  // exception safety.\n  shift(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const oldFront = this._front;\n    let newFront = oldFront;\n    const oldCursor = this._cursor;\n    let newCursor = oldCursor + 1;\n\n    const elements = oldFront._elements;\n    const element = elements[oldCursor];\n\n    if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n      assert(elements.length === QUEUE_MAX_ARRAY_SIZE);\n      assert(oldFront._next !== undefined);\n      newFront = oldFront._next!;\n      newCursor = 0;\n    }\n\n    // No mutations before this point.\n    --this._size;\n    this._cursor = newCursor;\n    if (oldFront !== newFront) {\n      this._front = newFront;\n    }\n\n    // Permit shifted element to be garbage collected.\n    elements[oldCursor] = undefined!;\n\n    return element;\n  }\n\n  // The tricky thing about forEach() is that it can be called\n  // re-entrantly. The queue may be mutated inside the callback. It is easy to\n  // see that push() within the callback has no negative effects since the end\n  // of the queue is checked for on every iteration. If shift() is called\n  // repeatedly within the callback then the next iteration may return an\n  // element that has been removed. In this case the callback will be called\n  // with undefined values until we either \"catch up\" with elements that still\n  // exist or reach the back of the queue.\n  forEach(callback: (element: T) => void): void {\n    let i = this._cursor;\n    let node = this._front;\n    let elements = node._elements;\n    while (i !== elements.length || node._next !== undefined) {\n      if (i === elements.length) {\n        assert(node._next !== undefined);\n        assert(i === QUEUE_MAX_ARRAY_SIZE);\n        node = node._next!;\n        elements = node._elements;\n        i = 0;\n        if (elements.length === 0) {\n          break;\n        }\n      }\n      callback(elements[i]);\n      ++i;\n    }\n  }\n\n  // Return the element that would be returned if shift() was called now,\n  // without modifying the queue.\n  peek(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const front = this._front;\n    const cursor = this._cursor;\n    return front._elements[cursor];\n  }\n}\n", "import assert from '../../stub/assert';\nimport { ReadableStream, ReadableStreamCancel, ReadableStreamReader } from '../readable-stream';\nimport { newPromise, setPromiseIsHandledToTrue } from '../helpers/webidl';\n\nexport function ReadableStreamReaderGenericInitialize<R>(reader: ReadableStreamReader<R>, stream: ReadableStream<R>) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nexport function ReadableStreamReaderGenericCancel(reader: ReadableStreamReader<any>, reason: any): Promise<undefined> {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nexport function ReadableStreamReaderGenericRelease(reader: ReadableStreamReader<any>) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  }\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined!;\n}\n\n// Helper functions for the readers.\n\nexport function readerLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nexport function defaultReaderClosedPromiseInitialize(reader: ReadableStreamReader<any>) {\n  reader._closedPromise = newPromise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nexport function defaultReaderClosedPromiseInitializeAsRejected(reader: ReadableStreamReader<any>, reason: any) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseReject(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseInitializeAsResolved(reader: ReadableStreamReader<any>) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseResolve(reader);\n}\n\nexport function defaultReaderClosedPromiseReject(reader: ReadableStreamReader<any>, reason: any) {\n  if (reader._closedPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(reader._closedPromise);\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nexport function defaultReaderClosedPromiseResetToRejected(reader: ReadableStreamReader<any>, reason: any) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseResolve(reader: ReadableStreamReader<any>) {\n  if (reader._closedPromise_resolve === undefined) {\n    return;\n  }\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n", "export const AbortSteps = Symbol('[[AbortSteps]]');\nexport const ErrorSteps = Symbol('[[ErrorSteps]]');\nexport const CancelSteps = Symbol('[[CancelSteps]]');\nexport const PullSteps = Symbol('[[PullSteps]]');\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite: typeof Number.isFinite = Number.isFinite || function (x) {\n  return typeof x === 'number' && isFinite(x);\n};\n\nexport default NumberIsFinite;\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc: typeof Math.trunc = Math.trunc || function (v) {\n  return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\nexport default MathTrunc;\n", "import NumberIsFinite from '../../stub/number-isfinite';\nimport MathTrunc from '../../stub/math-trunc';\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nexport function isDictionary(x: any): x is object | null {\n  return typeof x === 'object' || typeof x === 'function';\n}\n\nexport function assertDictionary(obj: unknown,\n                                 context: string): asserts obj is object | null | undefined {\n  if (obj !== undefined && !isDictionary(obj)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport type AnyFunction = (...args: any[]) => any;\n\n// https://heycam.github.io/webidl/#idl-callback-functions\nexport function assertFunction(x: unknown, context: string): asserts x is AnyFunction {\n  if (typeof x !== 'function') {\n    throw new TypeError(`${context} is not a function.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-object\nexport function isObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport function assertObject(x: unknown,\n                             context: string): asserts x is object {\n  if (!isObject(x)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport function assertRequiredArgument<T extends any>(x: T | undefined,\n                                                      position: number,\n                                                      context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n  }\n}\n\nexport function assertRequiredField<T extends any>(x: T | undefined,\n                                                   field: string,\n                                                   context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`${field} is required in '${context}'.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nexport function convertUnrestrictedDouble(value: unknown): number {\n  return Number(value);\n}\n\nfunction censorNegativeZero(x: number): number {\n  return x === 0 ? 0 : x;\n}\n\nfunction integerPart(x: number): number {\n  return censorNegativeZero(MathTrunc(x));\n}\n\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nexport function convertUnsignedLongLongWithEnforceRange(value: unknown, context: string): number {\n  const lowerBound = 0;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n\n  let x = Number(value);\n  x = censorNegativeZero(x);\n\n  if (!NumberIsFinite(x)) {\n    throw new TypeError(`${context} is not a finite number`);\n  }\n\n  x = integerPart(x);\n\n  if (x < lowerBound || x > upperBound) {\n    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n  }\n\n  if (!NumberIsFinite(x) || x === 0) {\n    return 0;\n  }\n\n  // TODO Use BigInt if supported?\n  // let xBigInt = BigInt(integerPart(x));\n  // xBigInt = BigInt.asUintN(64, xBigInt);\n  // return Number(xBigInt);\n\n  return x;\n}\n", "import { IsReadableStream, ReadableStream } from '../readable-stream';\n\nexport function assertReadableStream(x: unknown, context: string): asserts x is ReadableStream {\n  if (!IsReadableStream(x)) {\n    throw new TypeError(`${context} is not a ReadableStream.`);\n  }\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableStream } from '../readable-stream';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { PullSteps } from '../abstract-ops/internal-methods';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\n\n/**\n * A result returned by {@link ReadableStreamDefaultReader.read}.\n *\n * @public\n */\nexport type ReadableStreamDefaultReadResult<T> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value?: undefined;\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamDefaultReader<R>(stream: ReadableStream): ReadableStreamDefaultReader<R> {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadRequest<R>(stream: ReadableStream<R>,\n                                                readRequest: ReadRequest<R>): void {\n  assert(IsReadableStreamDefaultReader(stream._reader));\n  assert(stream._state === 'readable');\n\n  (stream._reader! as ReadableStreamDefaultReader<R>)._readRequests.push(readRequest);\n}\n\nexport function ReadableStreamFulfillReadRequest<R>(stream: ReadableStream<R>, chunk: R | undefined, done: boolean) {\n  const reader = stream._reader as ReadableStreamDefaultReader<R>;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift()!;\n  if (done) {\n    readRequest._closeSteps();\n  } else {\n    readRequest._chunkSteps(chunk!);\n  }\n}\n\nexport function ReadableStreamGetNumReadRequests<R>(stream: ReadableStream<R>): number {\n  return (stream._reader as ReadableStreamDefaultReader<R>)._readRequests.length;\n}\n\nexport function ReadableStreamHasDefaultReader(stream: ReadableStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamDefaultReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadRequest<R> {\n  _chunkSteps(chunk: R): void;\n\n  _closeSteps(): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamDefaultReader<R = any> {\n  /** @internal */\n  _ownerReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readRequests: SimpleQueue<ReadRequest<R>>;\n\n  constructor(stream: ReadableStream<R>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed,\n   * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamDefaultReaderRead(this, readRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamDefaultReader(this)) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamDefaultReader<R = any>(x: any): x is ReadableStreamDefaultReader<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultReader;\n}\n\nexport function ReadableStreamDefaultReaderRead<R>(reader: ReadableStreamDefaultReader<R>,\n                                                   readRequest: ReadRequest<R>): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    readRequest._closeSteps();\n  } else if (stream._state === 'errored') {\n    readRequest._errorSteps(stream._storedError);\n  } else {\n    assert(stream._state === 'readable');\n    stream._readableStreamController[PullSteps](readRequest as ReadRequest<any>);\n  }\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n", "/// <reference lib=\"es2018.asynciterable\" />\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const AsyncIteratorPrototype: AsyncIterable<any> | undefined =\n  Object.getPrototypeOf(Object.getPrototypeOf(async function* (): AsyncIterableIterator<any> {}).prototype);\n", "/// <reference lib=\"es2018.asynciterable\" />\n\nimport { ReadableStream } from '../readable-stream';\nimport {\n  AcquireReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadableStreamDefaultReadResult,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport assert from '../../stub/assert';\nimport { AsyncIteratorPrototype } from '@@target/stub/async-iterator-prototype';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  queueMicrotask,\n  transformPromiseWith\n} from '../helpers/webidl';\n\n/**\n * An async iterator returned by {@link ReadableStream.values}.\n *\n * @public\n */\nexport interface ReadableStreamAsyncIterator<R> extends AsyncIterator<R> {\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nexport class ReadableStreamAsyncIteratorImpl<R> {\n  private readonly _reader: ReadableStreamDefaultReader<R>;\n  private readonly _preventCancel: boolean;\n  private _ongoingPromise: Promise<ReadableStreamDefaultReadResult<R>> | undefined = undefined;\n  private _isFinished = false;\n\n  constructor(reader: ReadableStreamDefaultReader<R>, preventCancel: boolean) {\n    this._reader = reader;\n    this._preventCancel = preventCancel;\n  }\n\n  next(): Promise<ReadableStreamDefaultReadResult<R>> {\n    const nextSteps = () => this._nextSteps();\n    this._ongoingPromise = this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n      nextSteps();\n    return this._ongoingPromise;\n  }\n\n  return(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    const returnSteps = () => this._returnSteps(value);\n    return this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n      returnSteps();\n  }\n\n  private _nextSteps(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value: undefined, done: true });\n    }\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('iterate'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        this._ongoingPromise = undefined;\n        // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n        // FIXME Is this a bug in the specification, or in the test?\n        queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n      },\n      _closeSteps: () => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        resolvePromise({ value: undefined, done: true });\n      },\n      _errorSteps: reason => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        rejectPromise(reason);\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n    return promise;\n  }\n\n  private _returnSteps(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value, done: true });\n    }\n    this._isFinished = true;\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('finish iterating'));\n    }\n\n    assert(reader._readRequests.length === 0);\n\n    if (!this._preventCancel) {\n      const result = ReadableStreamReaderGenericCancel(reader, value);\n      ReadableStreamReaderGenericRelease(reader);\n      return transformPromiseWith(result, () => ({ value, done: true }));\n    }\n\n    ReadableStreamReaderGenericRelease(reader);\n    return promiseResolvedWith({ value, done: true });\n  }\n}\n\ndeclare class ReadableStreamAsyncIteratorInstance<R> implements ReadableStreamAsyncIterator<R> {\n  /** @interal */\n  _asyncIteratorImpl: ReadableStreamAsyncIteratorImpl<R>;\n\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nconst ReadableStreamAsyncIteratorPrototype: ReadableStreamAsyncIteratorInstance<any> = {\n  next(this: ReadableStreamAsyncIteratorInstance<any>): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n    }\n    return this._asyncIteratorImpl.next();\n  },\n\n  return(this: ReadableStreamAsyncIteratorInstance<any>, value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n    }\n    return this._asyncIteratorImpl.return(value);\n  }\n} as any;\nif (AsyncIteratorPrototype !== undefined) {\n  Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamAsyncIterator<R>(stream: ReadableStream<R>,\n                                                      preventCancel: boolean): ReadableStreamAsyncIterator<R> {\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n  const iterator: ReadableStreamAsyncIteratorInstance<R> = Object.create(ReadableStreamAsyncIteratorPrototype);\n  iterator._asyncIteratorImpl = impl;\n  return iterator;\n}\n\nfunction IsReadableStreamAsyncIterator<R = any>(x: any): x is ReadableStreamAsyncIterator<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n    return false;\n  }\n\n  try {\n    // noinspection SuspiciousTypeOfGuard\n    return (x as ReadableStreamAsyncIteratorInstance<any>)._asyncIteratorImpl instanceof\n      ReadableStreamAsyncIteratorImpl;\n  } catch {\n    return false;\n  }\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamAsyncIteratorBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n", "/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN: typeof Number.isNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n", "export function CreateArrayFromList<T extends any[]>(elements: T): T {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice() as T;\n}\n\nexport function CopyDataBlockBytes(dest: ArrayBuffer,\n                                   destOffset: number,\n                                   src: ArrayBuffer,\n                                   srcOffset: number,\n                                   n: number) {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n\n// Not implemented correctly\nexport function TransferArrayBuffer<T extends ArrayBufferLike>(O: T): T {\n  return O;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function CanTransferArrayBuffer(O: ArrayBufferLike): boolean {\n  return true;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function IsDetachedBuffer(O: ArrayBufferLike): boolean {\n  return false;\n}\n\nexport function ArrayBufferSlice(buffer: ArrayBufferLike, begin: number, end: number): ArrayBufferLike {\n  // ArrayBuffer.prototype.slice is not available on IE10\n  // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n  if (buffer.slice) {\n    return buffer.slice(begin, end);\n  }\n  const length = end - begin;\n  const slice = new ArrayBuffer(length);\n  CopyDataBlockBytes(slice, 0, buffer, begin, length);\n  return slice;\n}\n", "import NumberIsNaN from '../../stub/number-isnan';\nimport { ArrayBufferSlice } from './ecmascript';\n\nexport function IsNonNegativeNumber(v: number): boolean {\n  if (typeof v !== 'number') {\n    return false;\n  }\n\n  if (NumberIsNaN(v)) {\n    return false;\n  }\n\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function CloneAsUint8Array(O: ArrayBufferView): Uint8Array {\n  const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n  return new Uint8Array(buffer);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsNonNegativeNumber } from './miscellaneous';\n\nexport interface QueueContainer<T> {\n  _queue: SimpleQueue<T>;\n  _queueTotalSize: number;\n}\n\nexport interface QueuePair<T> {\n  value: T;\n  size: number;\n}\n\nexport function DequeueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift()!;\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n}\n\nexport function EnqueueValueWithSize<T>(container: QueueContainer<QueuePair<T>>, value: T, size: number) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  if (!IsNonNegativeNumber(size) || size === Infinity) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n}\n\nexport function PeekQueueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.peek();\n  return pair.value;\n}\n\nexport function ResetQueue<T>(container: QueueContainer<T>) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = new SimpleQueue<T>();\n  container._queueTotalSize = 0;\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadableStreamHasDefaultReader,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamAddReadIntoRequest,\n  ReadableStreamFulfillReadIntoRequest,\n  ReadableStreamGetNumReadIntoRequests,\n  ReadableStreamHasBYOBReader,\n  ReadIntoRequest\n} from './byob-reader';\nimport NumberIsInteger from '../../stub/number-isinteger';\nimport {\n  IsReadableStreamLocked,\n  ReadableByteStream,\n  ReadableStreamClose,\n  ReadableStreamError\n} from '../readable-stream';\nimport { ValidatedUnderlyingByteSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  ArrayBufferSlice,\n  CanTransferArrayBuffer,\n  CopyDataBlockBytes,\n  IsDetachedBuffer,\n  TransferArrayBuffer\n} from '../abstract-ops/ecmascript';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\nimport { assertRequiredArgument, convertUnsignedLongLongWithEnforceRange } from '../validators/basic';\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nexport class ReadableStreamBYOBRequest {\n  /** @internal */\n  _associatedReadableByteStreamController!: ReadableByteStreamController;\n  /** @internal */\n  _view!: ArrayBufferView | null;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n   */\n  get view(): ArrayBufferView | null {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that `bytesWritten` bytes were written into\n   * {@link ReadableStreamBYOBRequest.view | view}, causing the result be surfaced to the consumer.\n   *\n   * After this method is called, {@link ReadableStreamBYOBRequest.view | view} will be transferred and no longer\n   * modifiable.\n   */\n  respond(bytesWritten: number): void;\n  respond(bytesWritten: number | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respond');\n    }\n    assertRequiredArgument(bytesWritten, 1, 'respond');\n    bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view!.buffer)) {\n      throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n    }\n\n    assert(this._view!.byteLength > 0);\n    assert(this._view!.buffer.byteLength > 0);\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that instead of writing into\n   * {@link ReadableStreamBYOBRequest.view | view}, the underlying byte source is providing a new `ArrayBufferView`,\n   * which will be given to the consumer of the readable byte stream.\n   *\n   * After this method is called, `view` will be transferred and no longer modifiable.\n   */\n  respondWithNewView(view: ArrayBufferView): void;\n  respondWithNewView(view: ArrayBufferView | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respondWithNewView');\n    }\n    assertRequiredArgument(view, 1, 'respondWithNewView');\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(view.buffer)) {\n      throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n  respond: { enumerable: true },\n  respondWithNewView: { enumerable: true },\n  view: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBRequest',\n    configurable: true\n  });\n}\n\ninterface ArrayBufferViewConstructor<T extends ArrayBufferView = ArrayBufferView> {\n  new(buffer: ArrayBufferLike, byteOffset: number, length?: number): T;\n\n  readonly prototype: T;\n  readonly BYTES_PER_ELEMENT: number;\n}\n\ninterface ByteQueueElement {\n  buffer: ArrayBufferLike;\n  byteOffset: number;\n  byteLength: number;\n}\n\ntype PullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> =\n  DefaultPullIntoDescriptor\n  | BYOBPullIntoDescriptor<T>;\n\ninterface DefaultPullIntoDescriptor {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<Uint8Array>;\n  readerType: 'default';\n}\n\ninterface BYOBPullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<T>;\n  readerType: 'byob';\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableByteStreamController {\n  /** @internal */\n  _controlledReadableByteStream!: ReadableByteStream;\n  /** @internal */\n  _queue!: SimpleQueue<ByteQueueElement>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n  /** @internal */\n  _autoAllocateChunkSize: number | undefined;\n  /** @internal */\n  _byobRequest: ReadableStreamBYOBRequest | null;\n  /** @internal */\n  _pendingPullIntos!: SimpleQueue<PullIntoDescriptor>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the current BYOB pull request, or `null` if there isn't one.\n   */\n  get byobRequest(): ReadableStreamBYOBRequest | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    return ReadableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk chunk in the controlled readable stream.\n   * The chunk has to be an `ArrayBufferView` instance, or else a `TypeError` will be thrown.\n   */\n  enqueue(chunk: ArrayBufferView): void;\n  enqueue(chunk: ArrayBufferView | undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    assertRequiredArgument(chunk, 1, 'enqueue');\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('chunk must be an array buffer view');\n    }\n    if (chunk.byteLength === 0) {\n      throw new TypeError('chunk must have non-zero byteLength');\n    }\n    if (chunk.buffer.byteLength === 0) {\n      throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<Uint8Array>): void {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream));\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift()!;\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\n      readRequest._chunkSteps(view);\n      return;\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer: ArrayBuffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        readRequest._errorSteps(bufferE);\n        return;\n      }\n\n      const pullIntoDescriptor: DefaultPullIntoDescriptor = {\n        buffer,\n        bufferByteLength: autoAllocateChunkSize,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        viewConstructor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    ReadableStreamAddReadRequest(stream, readRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n  }\n}\n\nObject.defineProperties(ReadableByteStreamController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  byobRequest: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n    value: 'ReadableByteStreamController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nexport function IsReadableByteStreamController(x: any): x is ReadableByteStreamController {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableByteStreamController;\n}\n\nfunction IsReadableStreamBYOBRequest(x: any): x is ReadableStreamBYOBRequest {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBRequest;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller: ReadableByteStreamController): void {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller: ReadableByteStreamController) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = new SimpleQueue();\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor<T extends ArrayBufferView>(\n  stream: ReadableByteStream,\n  pullIntoDescriptor: PullIntoDescriptor<T>\n) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView as unknown as Uint8Array, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor<T extends ArrayBufferView>(\n  pullIntoDescriptor: PullIntoDescriptor<T>\n): T {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.viewConstructor(\n    pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize) as T;\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller: ReadableByteStreamController,\n                                                         buffer: ArrayBufferLike,\n                                                         byteOffset: number,\n                                                         byteLength: number) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller: ReadableByteStreamController,\n                                                                     pullIntoDescriptor: PullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller: ReadableByteStreamController,\n                                                                size: number,\n                                                                pullIntoDescriptor: PullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos.peek() === pullIntoDescriptor);\n  assert(controller._byobRequest === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller: ReadableByteStreamController) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller: ReadableByteStreamController) {\n  if (controller._byobRequest === null) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined!;\n  controller._byobRequest._view = null!;\n  controller._byobRequest = null;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller: ReadableByteStreamController) {\n  assert(!controller._closeRequested);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nexport function ReadableByteStreamControllerPullInto<T extends ArrayBufferView>(\n  controller: ReadableByteStreamController,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = (view.constructor as ArrayBufferViewConstructor<T>).BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor as ArrayBufferViewConstructor<T>;\n\n  // try {\n  const buffer = TransferArrayBuffer(view.buffer);\n  // } catch (e) {\n  //   readIntoRequest._errorSteps(e);\n  //   return;\n  // }\n\n  const pullIntoDescriptor: BYOBPullIntoDescriptor<T> = {\n    buffer,\n    bufferByteLength: buffer.byteLength,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    viewConstructor: ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    return;\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    readIntoRequest._closeSteps(emptyView);\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      readIntoRequest._chunkSteps(filledView);\n      return;\n    }\n\n    if (controller._closeRequested) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      readIntoRequest._errorSteps(e);\n      return;\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  ReadableStreamAddReadIntoRequest<T>(stream, readIntoRequest);\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller: ReadableByteStreamController,\n                                                          firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream)) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller: ReadableByteStreamController,\n                                                            bytesWritten: number,\n                                                            pullIntoDescriptor: PullIntoDescriptor) {\n  assert(pullIntoDescriptor.bytesFilled + bytesWritten <= pullIntoDescriptor.byteLength);\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller: ReadableByteStreamController, bytesWritten: number) {\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  assert(CanTransferArrayBuffer(firstDescriptor.buffer));\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  const state = controller._controlledReadableByteStream._state;\n  if (state === 'closed') {\n    assert(bytesWritten === 0);\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(state === 'readable');\n    assert(bytesWritten > 0);\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(\n  controller: ReadableByteStreamController\n): PullIntoDescriptor {\n  assert(controller._byobRequest === null);\n  const descriptor = controller._pendingPullIntos.shift()!;\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller: ReadableByteStreamController): boolean {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller: ReadableByteStreamController) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nexport function ReadableByteStreamControllerClose(controller: ReadableByteStreamController) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nexport function ReadableByteStreamControllerEnqueue(controller: ReadableByteStreamController, chunk: ArrayBufferView) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  if (IsDetachedBuffer(buffer)) {\n    throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n  }\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        'The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk'\n      );\n    }\n    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n  }\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  if (ReadableStreamHasDefaultReader(stream)) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      assert(controller._pendingPullIntos.length === 0);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n      if (controller._pendingPullIntos.length > 0) {\n        assert(controller._pendingPullIntos.peek().readerType === 'default');\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream)) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(!IsReadableStreamLocked(stream));\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableByteStreamControllerError(controller: ReadableByteStreamController, e: any) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableByteStreamControllerGetBYOBRequest(\n  controller: ReadableByteStreamController\n): ReadableStreamBYOBRequest | null {\n  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const view = new Uint8Array(firstDescriptor.buffer,\n                                firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n    const byobRequest: ReadableStreamBYOBRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n    SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n    controller._byobRequest = byobRequest;\n  }\n  return controller._byobRequest;\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller: ReadableByteStreamController): number | null {\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nexport function ReadableByteStreamControllerRespond(controller: ReadableByteStreamController, bytesWritten: number) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (bytesWritten === 0) {\n      throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n    }\n    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nexport function ReadableByteStreamControllerRespondWithNewView(controller: ReadableByteStreamController,\n                                                               view: ArrayBufferView) {\n  assert(controller._pendingPullIntos.length > 0);\n  assert(!IsDetachedBuffer(view.buffer));\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (view.byteLength !== 0) {\n      throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (view.byteLength === 0) {\n      throw new TypeError(\n        'The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream'\n      );\n    }\n  }\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n    throw new RangeError('The region specified by view is larger than byobRequest');\n  }\n\n  const viewByteLength = view.byteLength;\n  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n  ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n}\n\nexport function SetUpReadableByteStreamController(stream: ReadableByteStream,\n                                                  controller: ReadableByteStreamController,\n                                                  startAlgorithm: () => void | PromiseLike<void>,\n                                                  pullAlgorithm: () => Promise<void>,\n                                                  cancelAlgorithm: (reason: any) => Promise<void>,\n                                                  highWaterMark: number,\n                                                  autoAllocateChunkSize: number | undefined) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._byobRequest = null;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = new SimpleQueue();\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableByteStreamControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableByteStreamControllerFromUnderlyingSource(\n  stream: ReadableByteStream,\n  underlyingByteSource: ValidatedUnderlyingByteSource,\n  highWaterMark: number\n) {\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingByteSource.start !== undefined) {\n    startAlgorithm = () => underlyingByteSource.start!(controller);\n  }\n  if (underlyingByteSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingByteSource.pull!(controller);\n  }\n  if (underlyingByteSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingByteSource.cancel!(reason);\n  }\n\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError('autoAllocateChunkSize must be greater than 0');\n  }\n\n  SetUpReadableByteStreamController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize\n  );\n}\n\nfunction SetUpReadableStreamBYOBRequest(request: ReadableStreamBYOBRequest,\n                                        controller: ReadableByteStreamController,\n                                        view: ArrayBufferView) {\n  assert(IsReadableByteStreamController(controller));\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view));\n  assert(!IsDetachedBuffer(view.buffer));\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n", "import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableByteStream, ReadableStream } from '../readable-stream';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamController,\n  ReadableByteStreamControllerPullInto\n} from './byte-stream-controller';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\nimport { IsDetachedBuffer } from '../abstract-ops/ecmascript';\n\n/**\n * A result returned by {@link ReadableStreamBYOBReader.read}.\n *\n * @public\n */\nexport type ReadableStreamBYOBReadResult<T extends ArrayBufferView> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value: T | undefined;\n};\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamBYOBReader(stream: ReadableByteStream): ReadableStreamBYOBReader {\n  return new ReadableStreamBYOBReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadIntoRequest<T extends ArrayBufferView>(stream: ReadableByteStream,\n                                                                            readIntoRequest: ReadIntoRequest<T>): void {\n  assert(IsReadableStreamBYOBReader(stream._reader));\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  (stream._reader! as ReadableStreamBYOBReader)._readIntoRequests.push(readIntoRequest);\n}\n\nexport function ReadableStreamFulfillReadIntoRequest(stream: ReadableByteStream,\n                                                     chunk: ArrayBufferView,\n                                                     done: boolean) {\n  const reader = stream._reader as ReadableStreamBYOBReader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift()!;\n  if (done) {\n    readIntoRequest._closeSteps(chunk);\n  } else {\n    readIntoRequest._chunkSteps(chunk);\n  }\n}\n\nexport function ReadableStreamGetNumReadIntoRequests(stream: ReadableByteStream): number {\n  return (stream._reader as ReadableStreamBYOBReader)._readIntoRequests.length;\n}\n\nexport function ReadableStreamHasBYOBReader(stream: ReadableByteStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamBYOBReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadIntoRequest<T extends ArrayBufferView> {\n  _chunkSteps(chunk: T): void;\n\n  _closeSteps(chunk: T | undefined): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamBYOBReader {\n  /** @internal */\n  _ownerReadableStream!: ReadableByteStream;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readIntoRequests: SimpleQueue<ReadIntoRequest<any>>;\n\n  constructor(stream: ReadableByteStream) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    if (!IsReadableByteStreamController(stream._readableStreamController)) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n        'source');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Attempts to reads bytes into view, and returns a promise resolved with the result.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamBYOBReadResult<T>> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('read'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n    }\n    if (view.byteLength === 0) {\n      return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n    }\n    if (view.buffer.byteLength === 0) {\n      return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n    }\n    if (IsDetachedBuffer(view.buffer)) {\n      return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamBYOBReadResult<T>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamBYOBReadResult<T>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readIntoRequest: ReadIntoRequest<T> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamBYOBReader(x: any): x is ReadableStreamBYOBReader {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBReader;\n}\n\nexport function ReadableStreamBYOBReaderRead<T extends ArrayBufferView>(\n  reader: ReadableStreamBYOBReader,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    readIntoRequest._errorSteps(stream._storedError);\n  } else {\n    ReadableByteStreamControllerPullInto(\n      stream._readableStreamController as ReadableByteStreamController,\n      view,\n      readIntoRequest\n    );\n  }\n}\n\n// Helper functions for the ReadableStreamBYOBReader.\n\nfunction byobReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport NumberIsNaN from '../../stub/number-isnan';\n\nexport function ExtractHighWaterMark(strategy: QueuingStrategy, defaultHWM: number): number {\n  const { highWaterMark } = strategy;\n\n  if (highWaterMark === undefined) {\n    return defaultHWM;\n  }\n\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('Invalid highWaterMark');\n  }\n\n  return highWaterMark;\n}\n\nexport function ExtractSizeAlgorithm<T>(strategy: QueuingStrategy<T>): QueuingStrategySizeCallback<T> {\n  const { size } = strategy;\n\n  if (!size) {\n    return () => 1;\n  }\n\n  return size;\n}\n", "import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport { assertDictionary, assertFunction, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategy<T>(init: QueuingStrategy<T> | null | undefined,\n                                          context: string): QueuingStrategy<T> {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  const size = init?.size;\n  return {\n    highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n    size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n  };\n}\n\nfunction convertQueuingStrategySize<T>(fn: QueuingStrategySizeCallback<T>,\n                                       context: string): QueuingStrategySizeCallback<T> {\n  assertFunction(fn, context);\n  return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from '../writable-stream/underlying-sink';\nimport { WritableStreamDefaultController } from '../writable-stream';\n\nexport function convertUnderlyingSink<W>(original: UnderlyingSink<W> | null,\n                                         context: string): ValidatedUnderlyingSink<W> {\n  assertDictionary(original, context);\n  const abort = original?.abort;\n  const close = original?.close;\n  const start = original?.start;\n  const type = original?.type;\n  const write = original?.write;\n  return {\n    abort: abort === undefined ?\n      undefined :\n      convertUnderlyingSinkAbortCallback(abort, original!, `${context} has member 'abort' that`),\n    close: close === undefined ?\n      undefined :\n      convertUnderlyingSinkCloseCallback(close, original!, `${context} has member 'close' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSinkStartCallback(start, original!, `${context} has member 'start' that`),\n    write: write === undefined ?\n      undefined :\n      convertUnderlyingSinkWriteCallback(write, original!, `${context} has member 'write' that`),\n    type\n  };\n}\n\nfunction convertUnderlyingSinkAbortCallback(\n  fn: UnderlyingSinkAbortCallback,\n  original: UnderlyingSink,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSinkCloseCallback(\n  fn: UnderlyingSinkCloseCallback,\n  original: UnderlyingSink,\n  context: string\n): () => Promise<void> {\n  assertFunction(fn, context);\n  return () => promiseCall(fn, original, []);\n}\n\nfunction convertUnderlyingSinkStartCallback(\n  fn: UnderlyingSinkStartCallback,\n  original: UnderlyingSink,\n  context: string\n): UnderlyingSinkStartCallback {\n  assertFunction(fn, context);\n  return (controller: WritableStreamDefaultController) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSinkWriteCallback<W>(\n  fn: UnderlyingSinkWriteCallback<W>,\n  original: UnderlyingSink<W>,\n  context: string\n): (chunk: W, controller: WritableStreamDefaultController) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: W, controller: WritableStreamDefaultController) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import { IsWritableStream, WritableStream } from '../writable-stream';\n\nexport function assertWritableStream(x: unknown, context: string): asserts x is WritableStream {\n  if (!IsWritableStream(x)) {\n    throw new TypeError(`${context} is not a WritableStream.`);\n  }\n}\n", "/**\n * A signal object that allows you to communicate with a request and abort it if required\n * via its associated `AbortController` object.\n *\n * @remarks\n *   This interface is compatible with the `AbortSignal` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @public\n */\nexport interface AbortSignal {\n  /**\n   * Whether the request is aborted.\n   */\n  readonly aborted: boolean;\n\n  /**\n   * Add an event listener to be triggered when this signal becomes aborted.\n   */\n  addEventListener(type: 'abort', listener: () => void): void;\n\n  /**\n   * Remove an event listener that was previously added with {@link AbortSignal.addEventListener}.\n   */\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\nexport function isAbortSignal(value: unknown): value is AbortSignal {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  try {\n    return typeof (value as AbortSignal).aborted === 'boolean';\n  } catch {\n    // AbortSignal.prototype.aborted throws if its brand check fails\n    return false;\n  }\n}\n\n/**\n * A controller object that allows you to abort an `AbortSignal` when desired.\n *\n * @remarks\n *   This interface is compatible with the `AbortController` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @internal\n */\nexport interface AbortController {\n  readonly signal: AbortSignal;\n\n  abort(): void;\n}\n\ninterface AbortControllerConstructor {\n  new(): AbortController;\n}\n\nconst supportsAbortController = typeof (AbortController as any) === 'function';\n\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nexport function createAbortController(): AbortController | undefined {\n  if (supportsAbortController) {\n    return new (AbortController as AbortControllerConstructor)();\n  }\n  return undefined;\n}\n", "import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponPromise\n} from './helpers/webidl';\nimport {\n  DequeueValue,\n  EnqueueValueWithSize,\n  PeekQueueValue,\n  QueuePair,\n  ResetQueue\n} from './abstract-ops/queue-with-sizes';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { SimpleQueue } from './simple-queue';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { AbortSteps, ErrorSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from './writable-stream/underlying-sink';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertUnderlyingSink } from './validators/underlying-sink';\nimport { assertWritableStream } from './validators/writable-stream';\nimport { AbortController, AbortSignal, createAbortController } from './abort-signal';\n\ntype WritableStreamState = 'writable' | 'closed' | 'erroring' | 'errored';\n\ninterface WriteOrCloseRequest {\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n}\n\ntype WriteRequest = WriteOrCloseRequest;\ntype CloseRequest = WriteOrCloseRequest;\n\ninterface PendingAbortRequest {\n  _promise: Promise<undefined>;\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n  _reason: any;\n  _wasAlreadyErroring: boolean;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream<W = any> {\n  /** @internal */\n  _state!: WritableStreamState;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _writer: WritableStreamDefaultWriter<W> | undefined;\n  /** @internal */\n  _writableStreamController!: WritableStreamDefaultController<W>;\n  /** @internal */\n  _writeRequests!: SimpleQueue<WriteRequest>;\n  /** @internal */\n  _inFlightWriteRequest: WriteRequest | undefined;\n  /** @internal */\n  _closeRequest: CloseRequest | undefined;\n  /** @internal */\n  _inFlightCloseRequest: CloseRequest | undefined;\n  /** @internal */\n  _pendingAbortRequest: PendingAbortRequest | undefined;\n  /** @internal */\n  _backpressure!: boolean;\n\n  constructor(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>);\n  constructor(rawUnderlyingSink: UnderlyingSink<W> | null | undefined = {},\n              rawStrategy: QueuingStrategy<W> | null | undefined = {}) {\n    if (rawUnderlyingSink === undefined) {\n      rawUnderlyingSink = null;\n    } else {\n      assertObject(rawUnderlyingSink, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\n    InitializeWritableStream(this);\n\n    const type = underlyingSink.type;\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n    const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  /**\n   * Returns whether or not the writable stream is locked to a writer.\n   */\n  get locked(): boolean {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  /**\n   * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n   * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n   * mechanism of the underlying sink.\n   *\n   * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n   * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n   * the stream) if the stream is currently locked.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  /**\n   * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n   * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n   *\n   * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n   * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n   * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n   */\n  close() {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('close'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamClose(this);\n  }\n\n  /**\n   * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n   * is locked, no other writer can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n   * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n   * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n   */\n  getWriter(): WritableStreamDefaultWriter<W> {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nObject.defineProperties(WritableStream.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  getWriter: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n    value: 'WritableStream',\n    configurable: true\n  });\n}\n\nexport {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight,\n  UnderlyingSink,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkAbortCallback\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter<W>(stream: WritableStream<W>): WritableStreamDefaultWriter<W> {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream<W>(startAlgorithm: () => void | PromiseLike<void>,\n                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                 closeAlgorithm: () => Promise<void>,\n                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                 highWaterMark = 1,\n                                 sizeAlgorithm: QueuingStrategySizeCallback<W> = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: WritableStream<W> = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller: WritableStreamDefaultController<W> = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream<W>(stream: WritableStream<W>) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined!;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = new SimpleQueue();\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x: unknown): x is WritableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return x instanceof WritableStream;\n}\n\nfunction IsWritableStreamLocked(stream: WritableStream): boolean {\n  assert(IsWritableStream(stream));\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream: WritableStream, reason: any): Promise<undefined> {\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  stream._writableStreamController._abortReason = reason;\n  stream._writableStreamController._abortController?.abort();\n\n  // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n  // but it doesn't know that signaling abort runs author code that might have changed the state.\n  // Widen the type again by casting to WritableStreamState.\n  const state = stream._state as WritableStreamState;\n\n  if (state === 'closed' || state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _promise: undefined!,\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest!._promise = promise;\n\n  if (!wasAlreadyErroring) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\nfunction WritableStreamClose(stream: WritableStream<any>): Promise<undefined> {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return promiseRejectedWith(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const closeRequest: CloseRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  const writer = stream._writer;\n  if (writer !== undefined && stream._backpressure && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream: WritableStream): Promise<undefined> {\n  assert(IsWritableStreamLocked(stream));\n  assert(stream._state === 'writable');\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const writeRequest: WriteRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream: WritableStream, error: any) {\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream: WritableStream, reason: any) {\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream: WritableStream) {\n  assert(stream._state === 'erroring');\n  assert(!WritableStreamHasOperationMarkedInFlight(stream));\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  stream._writeRequests.forEach(writeRequest => {\n    writeRequest._reject(storedError);\n  });\n  stream._writeRequests = new SimpleQueue();\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  uponPromise(\n    promise,\n    () => {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    },\n    (reason: any) => {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream: WritableStream): boolean {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream: WritableStream): boolean {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream: WritableStream) {\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream: WritableStream, backpressure: boolean) {\n  assert(stream._state === 'writable');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(!backpressure);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nexport class WritableStreamDefaultWriter<W = any> {\n  /** @internal */\n  _ownerWritableStream: WritableStream<W>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _closedPromiseState!: 'pending' | 'resolved' | 'rejected';\n  /** @internal */\n  _readyPromise!: Promise<undefined>;\n  /** @internal */\n  _readyPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _readyPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readyPromiseState!: 'pending' | 'fulfilled' | 'rejected';\n\n  constructor(stream: WritableStream<W>) {\n    assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n    assertWritableStream(stream, 'First parameter');\n\n    if (IsWritableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n    }\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the writer\u2019s lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * Returns the desired size to fill the stream\u2019s internal queue. It can be negative, if the queue is over-full.\n   * A producer can use this information to determine the right amount of data to write.\n   *\n   * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n   * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n   * the writer\u2019s lock is released.\n   */\n  get desiredSize(): number | null {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the desired size to fill the stream\u2019s internal queue transitions\n   * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n   * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n   *\n   * If the stream becomes errored or aborted, or the writer\u2019s lock is released, the returned promise will become\n   * rejected.\n   */\n  get ready(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n   */\n  close(): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  /**\n   * Releases the writer\u2019s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n   * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n   * now on; otherwise, the writer will appear closed.\n   *\n   * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n   * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n   * It\u2019s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n   * other producers from writing in an interleaved manner.\n   */\n  releaseLock(): void {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * Writes the given chunk to the writable stream, by waiting until any previous writes have finished successfully,\n   * and then sending the chunk to the underlying sink's {@link UnderlyingSink.write | write()} method. It will return\n   * a promise that fulfills with undefined upon a successful write, or rejects if the write fails or stream becomes\n   * errored before the writing process is initiated.\n   *\n   * Note that what \"success\" means is up to the underlying sink; it might indicate simply that the chunk has been\n   * accepted, and not necessarily that it is safely saved to its ultimate destination.\n   */\n  write(chunk: W): Promise<void>;\n  write(chunk: W = undefined!): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  releaseLock: { enumerable: true },\n  write: { enumerable: true },\n  closed: { enumerable: true },\n  desiredSize: { enumerable: true },\n  ready: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultWriter',\n    configurable: true\n  });\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter<W = any>(x: any): x is WritableStreamDefaultWriter<W> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultWriter;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer: WritableStreamDefaultWriter, reason: any) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamClose(stream);\n}\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer: WritableStreamDefaultWriter): number | null {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer: WritableStreamDefaultWriter) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    `Writer was released and can no longer be used to monitor the stream's closedness`);\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined!;\n}\n\nfunction WritableStreamDefaultWriterWrite<W>(writer: WritableStreamDefaultWriter<W>, chunk: W): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return promiseRejectedWith(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nconst closeSentinel: unique symbol = {} as any;\n\ntype QueueRecord<W> = W | typeof closeSentinel;\n\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nexport class WritableStreamDefaultController<W = any> {\n  /** @internal */\n  _controlledWritableStream!: WritableStream<W>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<QueueRecord<W>>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _abortReason: any;\n  /** @internal */\n  _abortController: AbortController | undefined;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<W>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _writeAlgorithm!: (chunk: W) => Promise<void>;\n  /** @internal */\n  _closeAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _abortAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n   *\n   * @deprecated\n   *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n   *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n   */\n  get abortReason(): any {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('abortReason');\n    }\n    return this._abortReason;\n  }\n\n  /**\n   * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n   */\n  get signal(): AbortSignal {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('signal');\n    }\n    if (this._abortController === undefined) {\n      // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n      // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n      // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n      throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n    }\n    return this._abortController.signal;\n  }\n\n  /**\n   * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n   *\n   * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n   * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n   * normal lifecycle of interactions with the underlying sink.\n   */\n  error(e: any = undefined): void {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [AbortSteps](reason: any): Promise<void> {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n  abortReason: { enumerable: true },\n  signal: { enumerable: true },\n  error: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x: any): x is WritableStreamDefaultController<any> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultController;\n}\n\nfunction SetUpWritableStreamDefaultController<W>(stream: WritableStream<W>,\n                                                 controller: WritableStreamDefaultController<W>,\n                                                 startAlgorithm: () => void | PromiseLike<void>,\n                                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                                 closeAlgorithm: () => Promise<void>,\n                                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                                 highWaterMark: number,\n                                                 sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  assert(IsWritableStream(stream));\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._abortReason = undefined;\n  controller._abortController = createAbortController();\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = promiseResolvedWith(startResult);\n  uponPromise(\n    startPromise,\n    () => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    r => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDealWithRejection(stream, r);\n    }\n  );\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink<W>(stream: WritableStream<W>,\n                                                                   underlyingSink: ValidatedUnderlyingSink<W>,\n                                                                   highWaterMark: number,\n                                                                   sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let writeAlgorithm: (chunk: W) => Promise<void> = () => promiseResolvedWith(undefined);\n  let closeAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let abortAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSink.start !== undefined) {\n    startAlgorithm = () => underlyingSink.start!(controller);\n  }\n  if (underlyingSink.write !== undefined) {\n    writeAlgorithm = chunk => underlyingSink.write!(chunk, controller);\n  }\n  if (underlyingSink.close !== undefined) {\n    closeAlgorithm = () => underlyingSink.close!();\n  }\n  if (underlyingSink.abort !== undefined) {\n    abortAlgorithm = reason => underlyingSink.abort!(reason);\n  }\n\n  SetUpWritableStreamDefaultController(\n    stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller: WritableStreamDefaultController<any>) {\n  controller._writeAlgorithm = undefined!;\n  controller._closeAlgorithm = undefined!;\n  controller._abortAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\nfunction WritableStreamDefaultControllerClose<W>(controller: WritableStreamDefaultController<W>) {\n  EnqueueValueWithSize(controller, closeSentinel, 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize<W>(controller: WritableStreamDefaultController<W>,\n                                                        chunk: W): number {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller: WritableStreamDefaultController<any>): number {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite<W>(controller: WritableStreamDefaultController<W>,\n                                                 chunk: W,\n                                                 chunkSize: number) {\n  try {\n    EnqueueValueWithSize(controller, chunk, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded<W>(controller: WritableStreamDefaultController<W>) {\n  const stream = controller._controlledWritableStream;\n\n  if (!controller._started) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  assert(state !== 'closed' && state !== 'errored');\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const value = PeekQueueValue(controller);\n  if (value === closeSentinel) {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, value);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller: WritableStreamDefaultController<any>, error: any) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller: WritableStreamDefaultController<any>) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(\n    sinkClosePromise,\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerProcessWrite<W>(controller: WritableStreamDefaultController<W>, chunk: W) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  uponPromise(\n    sinkWritePromise,\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller: WritableStreamDefaultController<any>): boolean {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller: WritableStreamDefaultController<any>, error: any) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n}\n\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._closedPromise = newPromise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseReject(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseResolve(writer);\n}\n\nfunction defaultWriterClosedPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._closedPromise_reject === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  setPromiseIsHandledToTrue(writer._closedPromise);\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._closedPromise_resolve === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._readyPromise = newPromise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseReject(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseResolve(writer);\n}\n\nfunction defaultWriterReadyPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._readyPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(writer._readyPromise);\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer: WritableStreamDefaultWriter) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitialize(writer);\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._readyPromise_resolve === undefined) {\n    return;\n  }\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n", "/// <reference lib=\"dom\" />\nexport const NativeDOMException: typeof DOMException | undefined =\n  typeof DOMException !== 'undefined' ? DOMException : undefined;\n", "/// <reference types=\"node\" />\nimport { NativeDOMException } from './native';\n\ndeclare class DOMExceptionClass extends Error {\n  constructor(message?: string, name?: string);\n\n  name: string;\n  message: string;\n}\n\ntype DOMException = DOMExceptionClass;\ntype DOMExceptionConstructor = typeof DOMExceptionClass;\n\nfunction isDOMExceptionConstructor(ctor: unknown): ctor is DOMExceptionConstructor {\n  if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n    return false;\n  }\n  try {\n    new (ctor as DOMExceptionConstructor)();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction createDOMExceptionPolyfill(): DOMExceptionConstructor {\n  // eslint-disable-next-line no-shadow\n  const ctor = function DOMException(this: DOMException, message?: string, name?: string) {\n    this.message = message || '';\n    this.name = name || 'Error';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  } as any;\n  ctor.prototype = Object.create(Error.prototype);\n  Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n  return ctor;\n}\n\n// eslint-disable-next-line no-redeclare\nconst DOMException: DOMExceptionConstructor =\n  isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nexport { DOMException };\n", "import { IsReadableStream, IsReadableStreamLocked, ReadableStream, ReadableStreamCancel } from '../readable-stream';\nimport { AcquireReadableStreamDefaultReader, ReadableStreamDefaultReaderRead } from './default-reader';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamCloseQueuedOrInFlight,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n} from '../writable-stream';\nimport assert from '../../stub/assert';\nimport {\n  newPromise,\n  PerformPromiseThen,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponFulfillment,\n  uponPromise,\n  uponRejection\n} from '../helpers/webidl';\nimport { noop } from '../../utils';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\nimport { DOMException } from '../../stub/dom-exception';\n\nexport function ReadableStreamPipeTo<T>(source: ReadableStream<T>,\n                                        dest: WritableStream<T>,\n                                        preventClose: boolean,\n                                        preventAbort: boolean,\n                                        preventCancel: boolean,\n                                        signal: AbortSignal | undefined): Promise<undefined> {\n  assert(IsReadableStream(source));\n  assert(IsWritableStream(dest));\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(!IsReadableStreamLocked(source));\n  assert(!IsWritableStreamLocked(dest));\n\n  const reader = AcquireReadableStreamDefaultReader<T>(source);\n  const writer = AcquireWritableStreamDefaultWriter<T>(dest);\n\n  source._disturbed = true;\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = promiseResolvedWith<void>(undefined);\n\n  return newPromise((resolve, reject) => {\n    let abortAlgorithm: () => void;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions: Array<() => Promise<void>> = [];\n        if (!preventAbort) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        if (!preventCancel) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n      };\n\n      if (signal.aborted) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return newPromise<void>((resolveLoop, rejectLoop) => {\n        function next(done: boolean) {\n          if (done) {\n            resolveLoop();\n          } else {\n            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n            PerformPromiseThen(pipeStep(), next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep(): Promise<boolean> {\n      if (shuttingDown) {\n        return promiseResolvedWith(true);\n      }\n\n      return PerformPromiseThen(writer._readyPromise, () => {\n        return newPromise<boolean>((resolveRead, rejectRead) => {\n          ReadableStreamDefaultReaderRead(\n            reader,\n            {\n              _chunkSteps: chunk => {\n                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                resolveRead(false);\n              },\n              _closeSteps: () => resolveRead(true),\n              _errorSteps: rejectRead\n            }\n          );\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (!preventAbort) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (!preventClose) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    setPromiseIsHandledToTrue(pipeLoop());\n\n    function waitForWritesToFinish(): Promise<void> {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return PerformPromiseThen(\n        currentWrite,\n        () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\n      );\n    }\n\n    function isOrBecomesErrored(stream: ReadableStream | WritableStream,\n                                promise: Promise<void>,\n                                action: (reason: any) => void) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        uponRejection(promise, action);\n      }\n    }\n\n    function isOrBecomesClosed(stream: ReadableStream | WritableStream, promise: Promise<void>, action: () => void) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        uponFulfillment(promise, action);\n      }\n    }\n\n    function shutdownWithAction(action: () => Promise<unknown>, originalIsError?: boolean, originalError?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        uponPromise(\n          action(),\n          () => finalize(originalIsError, originalError),\n          newError => finalize(true, newError)\n        );\n      }\n    }\n\n    function shutdown(isError?: boolean, error?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError?: boolean, error?: any) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n", "import { QueuingStrategySizeCallback } from '../queuing-strategy';\nimport assert from '../../stub/assert';\nimport { DequeueValue, EnqueueValueWithSize, QueuePair, ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadRequest\n} from './default-reader';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsReadableStreamLocked, ReadableStream, ReadableStreamClose, ReadableStreamError } from '../readable-stream';\nimport { ValidatedUnderlyingSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableStreamDefaultController<R> {\n  /** @internal */\n  _controlledReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<R>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<R>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the controlled readable stream.\n   */\n  enqueue(chunk: R): void;\n  enqueue(chunk: R = undefined!): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<R>): void {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      readRequest._chunkSteps(chunk);\n    } else {\n      ReadableStreamAddReadRequest(stream, readRequest);\n      ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController<R = any>(x: any): x is ReadableStreamDefaultController<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultController;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller: ReadableStreamDefaultController<any>): void {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller: ReadableStreamDefaultController<any>): boolean {\n  const stream = controller._controlledReadableStream;\n\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller: ReadableStreamDefaultController<any>) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nexport function ReadableStreamDefaultControllerClose(controller: ReadableStreamDefaultController<any>) {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nexport function ReadableStreamDefaultControllerEnqueue<R>(\n  controller: ReadableStreamDefaultController<R>,\n  chunk: R\n): void {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableStreamDefaultControllerError(controller: ReadableStreamDefaultController<any>, e: any) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableStreamDefaultControllerGetDesiredSize(\n  controller: ReadableStreamDefaultController<any>\n): number | null {\n  const state = controller._controlledReadableStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nexport function ReadableStreamDefaultControllerHasBackpressure(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function ReadableStreamDefaultControllerCanCloseOrEnqueue(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  const state = controller._controlledReadableStream._state;\n\n  if (!controller._closeRequested && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function SetUpReadableStreamDefaultController<R>(stream: ReadableStream<R>,\n                                                        controller: ReadableStreamDefaultController<R>,\n                                                        startAlgorithm: () => void | PromiseLike<void>,\n                                                        pullAlgorithm: () => Promise<void>,\n                                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                                        highWaterMark: number,\n                                                        sizeAlgorithm: QueuingStrategySizeCallback<R>) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableStreamDefaultControllerFromUnderlyingSource<R>(\n  stream: ReadableStream<R>,\n  underlyingSource: ValidatedUnderlyingSource<R>,\n  highWaterMark: number,\n  sizeAlgorithm: QueuingStrategySizeCallback<R>\n) {\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSource.start !== undefined) {\n    startAlgorithm = () => underlyingSource.start!(controller);\n  }\n  if (underlyingSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingSource.pull!(controller);\n  }\n  if (underlyingSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingSource.cancel!(reason);\n  }\n\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n", "import {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  IsReadableStream,\n  ReadableByteStream,\n  ReadableStream,\n  ReadableStreamCancel,\n  ReadableStreamReader\n} from '../readable-stream';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadRequest\n} from './default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderRead,\n  ReadIntoRequest\n} from './byob-reader';\nimport assert from '../../stub/assert';\nimport { newPromise, promiseResolvedWith, queueMicrotask, uponRejection } from '../helpers/webidl';\nimport {\n  ReadableStreamDefaultController,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError\n} from './default-controller';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamControllerClose,\n  ReadableByteStreamControllerEnqueue,\n  ReadableByteStreamControllerError,\n  ReadableByteStreamControllerGetBYOBRequest,\n  ReadableByteStreamControllerRespond,\n  ReadableByteStreamControllerRespondWithNewView\n} from './byte-stream-controller';\nimport { CreateArrayFromList } from '../abstract-ops/ecmascript';\nimport { CloneAsUint8Array } from '../abstract-ops/miscellaneous';\n\nexport function ReadableStreamTee<R>(stream: ReadableStream<R>,\n                                     cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n  if (IsReadableByteStreamController(stream._readableStreamController)) {\n    return ReadableByteStreamTee(stream as unknown as ReadableByteStream) as\n      unknown as [ReadableStream<R>, ReadableStream<R>];\n  }\n  return ReadableStreamDefaultTee(stream, cloneForBranch2);\n}\n\nexport function ReadableStreamDefaultTee<R>(stream: ReadableStream<R>,\n                                            cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n\n  let reading = false;\n  let readAgain = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableStream<R>;\n  let branch2: ReadableStream<R>;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<undefined>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm(): Promise<void> {\n    if (reading) {\n      readAgain = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgain = false;\n          const chunk1 = chunk;\n          const chunk2 = chunk;\n\n          // There is no way to access the cloning code right now in the reference implementation.\n          // If we add one then we'll need an implementation for serializable objects.\n          // if (!canceled2 && cloneForBranch2) {\n          //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n          // }\n\n          if (!canceled1) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch1._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk1\n            );\n          }\n          if (!canceled2) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch2._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk2\n            );\n          }\n\n          reading = false;\n          if (readAgain) {\n            pullAlgorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n        if (!canceled2) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {\n    // do nothing\n  }\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  uponRejection(reader._closedPromise, (r: any) => {\n    ReadableStreamDefaultControllerError(branch1._readableStreamController as ReadableStreamDefaultController<R>, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController as ReadableStreamDefaultController<R>, r);\n    if (!canceled1 || !canceled2) {\n      resolveCancelPromise(undefined);\n    }\n  });\n\n  return [branch1, branch2];\n}\n\nexport function ReadableByteStreamTee(stream: ReadableByteStream): [ReadableByteStream, ReadableByteStream] {\n  assert(IsReadableStream(stream));\n  assert(IsReadableByteStreamController(stream._readableStreamController));\n\n  let reader: ReadableStreamReader<Uint8Array> = AcquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableByteStream;\n  let branch2: ReadableByteStream;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<void>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function forwardReaderError(thisReader: ReadableStreamReader<Uint8Array>) {\n    uponRejection(thisReader._closedPromise, r => {\n      if (thisReader !== reader) {\n        return;\n      }\n      ReadableByteStreamControllerError(branch1._readableStreamController, r);\n      ReadableByteStreamControllerError(branch2._readableStreamController, r);\n      if (!canceled1 || !canceled2) {\n        resolveCancelPromise(undefined);\n      }\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (IsReadableStreamBYOBReader(reader)) {\n      assert(reader._readIntoRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest: ReadRequest<Uint8Array> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n          }\n\n          if (!canceled1) {\n            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableByteStreamControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableByteStreamControllerClose(branch2._readableStreamController);\n        }\n        if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n        }\n        if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n        }\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n  }\n\n  function pullWithBYOBReader(view: ArrayBufferView, forBranch2: boolean) {\n    if (IsReadableStreamDefaultReader<Uint8Array>(reader)) {\n      assert(reader._readRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    const readIntoRequest: ReadIntoRequest<ArrayBufferView> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n            if (!byobCanceled) {\n              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n            }\n            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n          } else if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: chunk => {\n        reading = false;\n\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n        if (!byobCanceled) {\n          ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n        }\n        if (!otherCanceled) {\n          ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n        }\n\n        if (chunk !== undefined) {\n          assert(chunk.byteLength === 0);\n\n          if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n          }\n        }\n\n        if (!byobCanceled || !otherCanceled) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n  }\n\n  function pull1Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, false);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function pull2Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, true);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm(): void {\n    return;\n  }\n\n  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1, branch2];\n}\n", "import { assertDictionary, assertFunction, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport {\n  ReadableStreamController,\n  UnderlyingByteSource,\n  UnderlyingDefaultOrByteSource,\n  UnderlyingDefaultOrByteSourcePullCallback,\n  UnderlyingDefaultOrByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  ValidatedUnderlyingDefaultOrByteSource\n} from '../readable-stream/underlying-source';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\n\nexport function convertUnderlyingDefaultOrByteSource<R>(\n  source: UnderlyingSource<R> | UnderlyingByteSource | null,\n  context: string\n): ValidatedUnderlyingDefaultOrByteSource<R> {\n  assertDictionary(source, context);\n  const original = source as (UnderlyingDefaultOrByteSource<R> | null);\n  const autoAllocateChunkSize = original?.autoAllocateChunkSize;\n  const cancel = original?.cancel;\n  const pull = original?.pull;\n  const start = original?.start;\n  const type = original?.type;\n  return {\n    autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n      undefined :\n      convertUnsignedLongLongWithEnforceRange(\n        autoAllocateChunkSize,\n        `${context} has member 'autoAllocateChunkSize' that`\n      ),\n    cancel: cancel === undefined ?\n      undefined :\n      convertUnderlyingSourceCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    pull: pull === undefined ?\n      undefined :\n      convertUnderlyingSourcePullCallback(pull, original!, `${context} has member 'pull' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSourceStartCallback(start, original!, `${context} has member 'start' that`),\n    type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n  };\n}\n\nfunction convertUnderlyingSourceCancelCallback(\n  fn: UnderlyingSourceCancelCallback,\n  original: UnderlyingDefaultOrByteSource,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSourcePullCallback<R>(\n  fn: UnderlyingDefaultOrByteSourcePullCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): (controller: ReadableStreamController<R>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSourceStartCallback<R>(\n  fn: UnderlyingDefaultOrByteSourceStartCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): UnderlyingDefaultOrByteSourceStartCallback<R> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertReadableStreamType(type: string, context: string): 'bytes' {\n  type = `${type}`;\n  if (type !== 'bytes') {\n    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n  }\n  return type;\n}\n", "import { assertDictionary } from './basic';\nimport { ReadableStreamGetReaderOptions } from '../readable-stream/reader-options';\n\nexport function convertReaderOptions(options: ReadableStreamGetReaderOptions | null | undefined,\n                                     context: string): ReadableStreamGetReaderOptions {\n  assertDictionary(options, context);\n  const mode = options?.mode;\n  return {\n    mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n  };\n}\n\nfunction convertReadableStreamReaderMode(mode: string, context: string): 'byob' {\n  mode = `${mode}`;\n  if (mode !== 'byob') {\n    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n  }\n  return mode;\n}\n", "import { assertDictionary } from './basic';\nimport {\n  ReadableStreamIteratorOptions,\n  ValidatedReadableStreamIteratorOptions\n} from '../readable-stream/iterator-options';\n\nexport function convertIteratorOptions(options: ReadableStreamIteratorOptions | null | undefined,\n                                       context: string): ValidatedReadableStreamIteratorOptions {\n  assertDictionary(options, context);\n  const preventCancel = options?.preventCancel;\n  return { preventCancel: Boolean(preventCancel) };\n}\n", "import { assertDictionary } from './basic';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from '../readable-stream/pipe-options';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\n\nexport function convertPipeOptions(options: StreamPipeOptions | null | undefined,\n                                   context: string): ValidatedStreamPipeOptions {\n  assertDictionary(options, context);\n  const preventAbort = options?.preventAbort;\n  const preventCancel = options?.preventCancel;\n  const preventClose = options?.preventClose;\n  const signal = options?.signal;\n  if (signal !== undefined) {\n    assertAbortSignal(signal, `${context} has member 'signal' that`);\n  }\n  return {\n    preventAbort: Boolean(preventAbort),\n    preventCancel: Boolean(preventCancel),\n    preventClose: Boolean(preventClose),\n    signal\n  };\n}\n\nfunction assertAbortSignal(signal: unknown, context: string): asserts signal is AbortSignal {\n  if (!isAbortSignal(signal)) {\n    throw new TypeError(`${context} is not an AbortSignal.`);\n  }\n}\n", "import { assertDictionary, assertRequiredField } from './basic';\nimport { ReadableStream } from '../readable-stream';\nimport { WritableStream } from '../writable-stream';\nimport { assertReadableStream } from './readable-stream';\nimport { assertWritableStream } from './writable-stream';\n\nexport function convertReadableWritablePair<RS extends ReadableStream, WS extends WritableStream>(\n  pair: { readable: RS; writable: WS } | null | undefined,\n  context: string\n): { readable: RS; writable: WS } {\n  assertDictionary(pair, context);\n\n  const readable = pair?.readable;\n  assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n  assertReadableStream(readable, `${context} has member 'readable' that`);\n\n  const writable = pair?.writable;\n  assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n  assertWritableStream(writable, `${context} has member 'writable' that`);\n\n  return { readable, writable };\n}\n", "import assert from '../stub/assert';\nimport {\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith\n} from './helpers/webidl';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { AcquireReadableStreamAsyncIterator, ReadableStreamAsyncIterator } from './readable-stream/async-iterator';\nimport { defaultReaderClosedPromiseReject, defaultReaderClosedPromiseResolve } from './readable-stream/generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReadResult\n} from './readable-stream/default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBReadResult\n} from './readable-stream/byob-reader';\nimport { ReadableStreamPipeTo } from './readable-stream/pipe';\nimport { ReadableStreamTee } from './readable-stream/tee';\nimport { IsWritableStream, IsWritableStreamLocked, WritableStream } from './writable-stream';\nimport { SimpleQueue } from './simple-queue';\nimport {\n  ReadableByteStreamController,\n  ReadableStreamBYOBRequest,\n  SetUpReadableByteStreamController,\n  SetUpReadableByteStreamControllerFromUnderlyingSource\n} from './readable-stream/byte-stream-controller';\nimport {\n  ReadableStreamDefaultController,\n  SetUpReadableStreamDefaultController,\n  SetUpReadableStreamDefaultControllerFromUnderlyingSource\n} from './readable-stream/default-controller';\nimport {\n  UnderlyingByteSource,\n  UnderlyingByteSourcePullCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceStartCallback\n} from './readable-stream/underlying-source';\nimport { noop } from '../utils';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { CreateArrayFromList } from './abstract-ops/ecmascript';\nimport { CancelSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertUnderlyingDefaultOrByteSource } from './validators/underlying-source';\nimport { ReadableStreamGetReaderOptions } from './readable-stream/reader-options';\nimport { convertReaderOptions } from './validators/reader-options';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from './readable-stream/pipe-options';\nimport { ReadableStreamIteratorOptions } from './readable-stream/iterator-options';\nimport { convertIteratorOptions } from './validators/iterator-options';\nimport { convertPipeOptions } from './validators/pipe-options';\nimport { ReadableWritablePair } from './readable-stream/readable-writable-pair';\nimport { convertReadableWritablePair } from './validators/readable-writable-pair';\n\nexport type ReadableByteStream = ReadableStream<Uint8Array> & {\n  _readableStreamController: ReadableByteStreamController\n};\n\ntype ReadableStreamState = 'readable' | 'closed' | 'errored';\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nexport class ReadableStream<R = any> {\n  /** @internal */\n  _state!: ReadableStreamState;\n  /** @internal */\n  _reader: ReadableStreamReader<R> | undefined;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _disturbed!: boolean;\n  /** @internal */\n  _readableStreamController!: ReadableStreamDefaultController<R> | ReadableByteStreamController;\n\n  constructor(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number; size?: undefined });\n  constructor(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>);\n  constructor(rawUnderlyingSource: UnderlyingSource<R> | UnderlyingByteSource | null | undefined = {},\n              rawStrategy: QueuingStrategy<R> | null | undefined = {}) {\n    if (rawUnderlyingSource === undefined) {\n      rawUnderlyingSource = null;\n    } else {\n      assertObject(rawUnderlyingSource, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\n    InitializeReadableStream(this);\n\n    if (underlyingSource.type === 'bytes') {\n      if (strategy.size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n      const highWaterMark = ExtractHighWaterMark(strategy, 0);\n      SetUpReadableByteStreamControllerFromUnderlyingSource(\n        this as unknown as ReadableByteStream,\n        underlyingSource,\n        highWaterMark\n      );\n    } else {\n      assert(underlyingSource.type === undefined);\n      const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n      const highWaterMark = ExtractHighWaterMark(strategy, 1);\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this,\n        underlyingSource,\n        highWaterMark,\n        sizeAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n   */\n  get locked(): boolean {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  /**\n   * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n   *\n   * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n   * method, which might or might not use it.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  /**\n   * Creates a {@link ReadableStreamBYOBReader} and locks the stream to the new reader.\n   *\n   * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams,\n   * i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading.\n   * The returned BYOB reader provides the ability to directly read individual chunks from the stream via its\n   * {@link ReadableStreamBYOBReader.read | read()} method, into developer-supplied buffers, allowing more precise\n   * control over allocation.\n   */\n  getReader({ mode }: { mode: 'byob' }): ReadableStreamBYOBReader;\n  /**\n   * Creates a {@link ReadableStreamDefaultReader} and locks the stream to the new reader.\n   * While the stream is locked, no other reader can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to consume a stream\n   * in its entirety. By getting a reader for the stream, you can ensure nobody else can interleave reads with yours\n   * or cancel the stream, which would interfere with your abstraction.\n   */\n  getReader(): ReadableStreamDefaultReader<R>;\n  getReader(\n    rawOptions: ReadableStreamGetReaderOptions | null | undefined = undefined\n  ): ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    const options = convertReaderOptions(rawOptions, 'First parameter');\n\n    if (options.mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    assert(options.mode === 'byob');\n    return AcquireReadableStreamBYOBReader(this as unknown as ReadableByteStream);\n  }\n\n  /**\n   * Provides a convenient, chainable way of piping this readable stream through a transform stream\n   * (or any other `{ writable, readable }` pair). It simply {@link ReadableStream.pipeTo | pipes} the stream\n   * into the writable side of the supplied pair, and returns the readable side for further use.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeThrough<RS extends ReadableStream>(\n    transform: { readable: RS; writable: WritableStream<R> },\n    options?: StreamPipeOptions\n  ): RS;\n  pipeThrough<RS extends ReadableStream>(\n    rawTransform: { readable: RS; writable: WritableStream<R> } | null | undefined,\n    rawOptions: StreamPipeOptions | null | undefined = {}\n  ): RS {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n    assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\n    const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n    const options = convertPipeOptions(rawOptions, 'Second parameter');\n\n    if (IsReadableStreamLocked(this)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(transform.writable)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(\n      this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n\n    setPromiseIsHandledToTrue(promise);\n\n    return transform.readable;\n  }\n\n  /**\n   * Pipes this readable stream to a given writable stream. The way in which the piping process behaves under\n   * various error conditions can be customized with a number of passed options. It returns a promise that fulfills\n   * when the piping process completes successfully, or rejects if any errors were encountered.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n  pipeTo(destination: WritableStream<R> | null | undefined,\n         rawOptions: StreamPipeOptions | null | undefined = {}): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('pipeTo'));\n    }\n\n    if (destination === undefined) {\n      return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n    }\n    if (!IsWritableStream(destination)) {\n      return promiseRejectedWith(\n        new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`)\n      );\n    }\n\n    let options: ValidatedStreamPipeOptions;\n    try {\n      options = convertPipeOptions(rawOptions, 'Second parameter');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream')\n      );\n    }\n    if (IsWritableStreamLocked(destination)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream')\n      );\n    }\n\n    return ReadableStreamPipeTo<R>(\n      this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n  }\n\n  /**\n   * Tees this readable stream, returning a two-element array containing the two resulting branches as\n   * new {@link ReadableStream} instances.\n   *\n   * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n   * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n   * propagated to the stream's underlying source.\n   *\n   * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n   * this could allow interference between the two branches.\n   */\n  tee(): [ReadableStream<R>, ReadableStream<R>] {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return CreateArrayFromList(branches);\n  }\n\n  /**\n   * Asynchronously iterates over the chunks in the stream's internal queue.\n   *\n   * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader.\n   * The lock will be released if the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method\n   * is called, e.g. by breaking out of the loop.\n   *\n   * By default, calling the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method will also\n   * cancel the stream. To prevent this, use the stream's {@link ReadableStream.values | values()} method, passing\n   * `true` for the `preventCancel` option.\n   */\n  values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n  values(rawOptions: ReadableStreamIteratorOptions | null | undefined = undefined): ReadableStreamAsyncIterator<R> {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('values');\n    }\n\n    const options = convertIteratorOptions(rawOptions, 'First parameter');\n    return AcquireReadableStreamAsyncIterator<R>(this, options.preventCancel);\n  }\n\n  /**\n   * {@inheritDoc ReadableStream.values}\n   */\n  [Symbol.asyncIterator]: (options?: ReadableStreamIteratorOptions) => ReadableStreamAsyncIterator<R>;\n}\n\nObject.defineProperties(ReadableStream.prototype, {\n  cancel: { enumerable: true },\n  getReader: { enumerable: true },\n  pipeThrough: { enumerable: true },\n  pipeTo: { enumerable: true },\n  tee: { enumerable: true },\n  values: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n    value: 'ReadableStream',\n    configurable: true\n  });\n}\nif (typeof Symbol.asyncIterator === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.asyncIterator, {\n    value: ReadableStream.prototype.values,\n    writable: true,\n    configurable: true\n  });\n}\n\nexport {\n  ReadableStreamAsyncIterator,\n  ReadableStreamDefaultReadResult,\n  ReadableStreamBYOBReadResult,\n  UnderlyingByteSource,\n  UnderlyingSource,\n  UnderlyingSourceStartCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceCancelCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingByteSourcePullCallback,\n  StreamPipeOptions,\n  ReadableWritablePair,\n  ReadableStreamIteratorOptions\n};\n\n// Abstract operations for the ReadableStream.\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableStream<R>(startAlgorithm: () => void | PromiseLike<void>,\n                                        pullAlgorithm: () => Promise<void>,\n                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                        highWaterMark = 1,\n                                        sizeAlgorithm: QueuingStrategySizeCallback<R> = () => 1): ReadableStream<R> {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: ReadableStream<R> = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableByteStream(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>\n): ReadableByteStream {\n  const stream: ReadableByteStream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream: ReadableStream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nexport function IsReadableStream(x: unknown): x is ReadableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStream;\n}\n\nexport function IsReadableStreamDisturbed(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  return stream._disturbed;\n}\n\nexport function IsReadableStreamLocked(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamCancel<R>(stream: ReadableStream<R>, reason: any): Promise<undefined> {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const reader = stream._reader;\n  if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._closeSteps(undefined);\n    });\n    reader._readIntoRequests = new SimpleQueue();\n  }\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return transformPromiseWith(sourceCancelPromise, noop);\n}\n\nexport function ReadableStreamClose<R>(stream: ReadableStream<R>): void {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._closeSteps();\n    });\n    reader._readRequests = new SimpleQueue();\n  }\n}\n\nexport function ReadableStreamError<R>(stream: ReadableStream<R>, e: any): void {\n  assert(IsReadableStream(stream));\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._errorSteps(e);\n    });\n\n    reader._readRequests = new SimpleQueue();\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._errorSteps(e);\n    });\n\n    reader._readIntoRequests = new SimpleQueue();\n  }\n}\n\n// Readers\n\nexport type ReadableStreamReader<R> = ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader;\n\nexport {\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader\n};\n\n// Controllers\n\nexport {\n  ReadableStreamDefaultController,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController\n};\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n", "import { QueuingStrategyInit } from '../queuing-strategy';\nimport { assertDictionary, assertRequiredField, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategyInit(init: QueuingStrategyInit | null | undefined,\n                                           context: string): QueuingStrategyInit {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n  return {\n    highWaterMark: convertUnrestrictedDouble(highWaterMark)\n  };\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst byteLengthSizeFunction = (chunk: ArrayBufferView): number => {\n  return chunk.byteLength;\n};\ntry {\n  Object.defineProperty(byteLengthSizeFunction, 'name', {\n    value: 'size',\n    configurable: true\n  });\n} catch {\n  // This property is non-configurable in older browsers, so ignore if this throws.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nexport default class ByteLengthQueuingStrategy implements QueuingStrategy<ArrayBufferView> {\n  /** @internal */\n  readonly _byteLengthQueuingStrategyHighWaterMark: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('highWaterMark');\n    }\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by returning the value of its `byteLength` property.\n   */\n  get size(): (chunk: ArrayBufferView) => number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('size');\n    }\n    return byteLengthSizeFunction;\n  }\n}\n\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'ByteLengthQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the ByteLengthQueuingStrategy.\n\nfunction byteLengthBrandCheckException(name: string): TypeError {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\n\nexport function IsByteLengthQueuingStrategy(x: any): x is ByteLengthQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof ByteLengthQueuingStrategy;\n}\n", "import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst countSizeFunction = (): 1 => {\n  return 1;\n};\ntry {\n  Object.defineProperty(countSizeFunction, 'name', {\n    value: 'size',\n    configurable: true\n  });\n} catch {\n  // This property is non-configurable in older browsers, so ignore if this throws.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nexport default class CountQueuingStrategy implements QueuingStrategy<any> {\n  /** @internal */\n  readonly _countQueuingStrategyHighWaterMark!: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('highWaterMark');\n    }\n    return this._countQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by always returning 1.\n   * This ensures that the total queue size is a count of the number of chunks in the queue.\n   */\n  get size(): (chunk: any) => 1 {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('size');\n    }\n    return countSizeFunction;\n  }\n}\n\nObject.defineProperties(CountQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'CountQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the CountQueuingStrategy.\n\nfunction countBrandCheckException(name: string): TypeError {\n  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\n\nexport function IsCountQueuingStrategy(x: any): x is CountQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof CountQueuingStrategy;\n}\n", "import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from '../transform-stream/transformer';\nimport { TransformStreamDefaultController } from '../transform-stream';\n\nexport function convertTransformer<I, O>(original: Transformer<I, O> | null,\n                                         context: string): ValidatedTransformer<I, O> {\n  assertDictionary(original, context);\n  const flush = original?.flush;\n  const readableType = original?.readableType;\n  const start = original?.start;\n  const transform = original?.transform;\n  const writableType = original?.writableType;\n  return {\n    flush: flush === undefined ?\n      undefined :\n      convertTransformerFlushCallback(flush, original!, `${context} has member 'flush' that`),\n    readableType,\n    start: start === undefined ?\n      undefined :\n      convertTransformerStartCallback(start, original!, `${context} has member 'start' that`),\n    transform: transform === undefined ?\n      undefined :\n      convertTransformerTransformCallback(transform, original!, `${context} has member 'transform' that`),\n    writableType\n  };\n}\n\nfunction convertTransformerFlushCallback<I, O>(\n  fn: TransformerFlushCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): (controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertTransformerStartCallback<I, O>(\n  fn: TransformerStartCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): TransformerStartCallback<O> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertTransformerTransformCallback<I, O>(\n  fn: TransformerTransformCallback<I, O>,\n  original: Transformer<I, O>,\n  context: string\n): (chunk: I, controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: I, controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [chunk, controller]);\n}\n", "import assert from '../stub/assert';\nimport { newPromise, promiseRejectedWith, promiseResolvedWith, transformPromiseWith } from './helpers/webidl';\nimport { CreateReadableStream, ReadableStream, ReadableStreamDefaultController } from './readable-stream';\nimport {\n  ReadableStreamDefaultControllerCanCloseOrEnqueue,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure\n} from './readable-stream/default-controller';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { CreateWritableStream, WritableStream, WritableStreamDefaultControllerErrorIfNeeded } from './writable-stream';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from './transform-stream/transformer';\nimport { convertTransformer } from './validators/transformer';\n\n// Class TransformStream\n\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nexport class TransformStream<I = any, O = any> {\n  /** @internal */\n  _writable!: WritableStream<I>;\n  /** @internal */\n  _readable!: ReadableStream<O>;\n  /** @internal */\n  _backpressure!: boolean;\n  /** @internal */\n  _backpressureChangePromise!: Promise<void>;\n  /** @internal */\n  _backpressureChangePromise_resolve!: () => void;\n  /** @internal */\n  _transformStreamController!: TransformStreamDefaultController<O>;\n\n  constructor(\n    transformer?: Transformer<I, O>,\n    writableStrategy?: QueuingStrategy<I>,\n    readableStrategy?: QueuingStrategy<O>\n  );\n  constructor(rawTransformer: Transformer<I, O> | null | undefined = {},\n              rawWritableStrategy: QueuingStrategy<I> | null | undefined = {},\n              rawReadableStrategy: QueuingStrategy<O> | null | undefined = {}) {\n    if (rawTransformer === undefined) {\n      rawTransformer = null;\n    }\n\n    const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n    const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\n    const transformer = convertTransformer(rawTransformer, 'First parameter');\n    if (transformer.readableType !== undefined) {\n      throw new RangeError('Invalid readableType specified');\n    }\n    if (transformer.writableType !== undefined) {\n      throw new RangeError('Invalid writableType specified');\n    }\n\n    const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n    const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n    const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\n    let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n    const startPromise = newPromise<void>(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(\n      this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm\n    );\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    if (transformer.start !== undefined) {\n      startPromise_resolve(transformer.start(this._transformStreamController));\n    } else {\n      startPromise_resolve(undefined);\n    }\n  }\n\n  /**\n   * The readable side of the transform stream.\n   */\n  get readable(): ReadableStream<O> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  /**\n   * The writable side of the transform stream.\n   */\n  get writable(): WritableStream<I> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nObject.defineProperties(TransformStream.prototype, {\n  readable: { enumerable: true },\n  writable: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n    value: 'TransformStream',\n    configurable: true\n  });\n}\n\nexport {\n  Transformer,\n  TransformerStartCallback,\n  TransformerFlushCallback,\n  TransformerTransformCallback\n};\n\n// Transform Stream Abstract Operations\n\nexport function CreateTransformStream<I, O>(startAlgorithm: () => void | PromiseLike<void>,\n                                            transformAlgorithm: (chunk: I) => Promise<void>,\n                                            flushAlgorithm: () => Promise<void>,\n                                            writableHighWaterMark = 1,\n                                            writableSizeAlgorithm: QueuingStrategySizeCallback<I> = () => 1,\n                                            readableHighWaterMark = 0,\n                                            readableSizeAlgorithm: QueuingStrategySizeCallback<O> = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream: TransformStream<I, O> = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n  const startPromise = newPromise<void>(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream<I, O>(stream: TransformStream<I, O>,\n                                         startPromise: Promise<void>,\n                                         writableHighWaterMark: number,\n                                         writableSizeAlgorithm: QueuingStrategySizeCallback<I>,\n                                         readableHighWaterMark: number,\n                                         readableSizeAlgorithm: QueuingStrategySizeCallback<O>) {\n  function startAlgorithm(): Promise<void> {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk: I): Promise<void> {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return promiseResolvedWith(undefined);\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined!;\n  stream._backpressureChangePromise = undefined!;\n  stream._backpressureChangePromise_resolve = undefined!;\n  TransformStreamSetBackpressure(stream, true);\n\n  stream._transformStreamController = undefined!;\n}\n\nfunction IsTransformStream(x: unknown): x is TransformStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return x instanceof TransformStream;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream: TransformStream, e: any) {\n  ReadableStreamDefaultControllerError(\n    stream._readable._readableStreamController as ReadableStreamDefaultController<any>,\n    e\n  );\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream: TransformStream, e: any) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream: TransformStream, backpressure: boolean) {\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = newPromise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nexport class TransformStreamDefaultController<O> {\n  /** @internal */\n  _controlledTransformStream: TransformStream<any, O>;\n  /** @internal */\n  _transformAlgorithm: (chunk: any) => Promise<void>;\n  /** @internal */\n  _flushAlgorithm: () => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the readable side\u2019s internal queue. It can be negative, if the queue is over-full.\n   */\n  get desiredSize(): number | null {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController as ReadableStreamDefaultController<O>);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the readable side of the controlled transform stream.\n   */\n  enqueue(chunk: O): void;\n  enqueue(chunk: O = undefined!): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors both the readable side and the writable side of the controlled transform stream, making all future\n   * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n   */\n  error(reason: any = undefined): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  /**\n   * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n   * transformer only needs to consume a portion of the chunks written to the writable side.\n   */\n  terminate(): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  terminate: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'TransformStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController<O = any>(x: any): x is TransformStreamDefaultController<O> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return x instanceof TransformStreamDefaultController;\n}\n\nfunction SetUpTransformStreamDefaultController<I, O>(stream: TransformStream<I, O>,\n                                                     controller: TransformStreamDefaultController<O>,\n                                                     transformAlgorithm: (chunk: I) => Promise<void>,\n                                                     flushAlgorithm: () => Promise<void>) {\n  assert(IsTransformStream(stream));\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer<I, O>(stream: TransformStream<I, O>,\n                                                                    transformer: ValidatedTransformer<I, O>) {\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = (chunk: I): Promise<void> => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk as unknown as O);\n      return promiseResolvedWith(undefined);\n    } catch (transformResultE) {\n      return promiseRejectedWith(transformResultE);\n    }\n  };\n\n  let flushAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (transformer.transform !== undefined) {\n    transformAlgorithm = chunk => transformer.transform!(chunk, controller);\n  }\n  if (transformer.flush !== undefined) {\n    flushAlgorithm = () => transformer.flush!(controller);\n  }\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller: TransformStreamDefaultController<any>) {\n  controller._transformAlgorithm = undefined!;\n  controller._flushAlgorithm = undefined!;\n}\n\nfunction TransformStreamDefaultControllerEnqueue<O>(controller: TransformStreamDefaultController<O>, chunk: O) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller: TransformStreamDefaultController<any>, e: any) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform<I, O>(controller: TransformStreamDefaultController<O>,\n                                                                chunk: I) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromiseWith(transformPromise, undefined, r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate<O>(controller: TransformStreamDefaultController<O>) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n\n  ReadableStreamDefaultControllerClose(readableController);\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm<I, O>(stream: TransformStream<I, O>, chunk: I): Promise<void> {\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise, () => {\n      const writable = stream._writable;\n      const state = writable._state;\n      if (state === 'erroring') {\n        throw writable._storedError;\n      }\n      assert(state === 'writable');\n      return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n    });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream: TransformStream, reason: any): Promise<void> {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return promiseResolvedWith(undefined);\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm<I, O>(stream: TransformStream<I, O>): Promise<void> {\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return transformPromiseWith(flushPromise, () => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    ReadableStreamDefaultControllerClose(readable._readableStreamController as ReadableStreamDefaultController<O>);\n  }, r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream: TransformStream): Promise<void> {\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n", "/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n", "/*! fetch-blob. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n", "import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n", "/*! formdata-polyfill. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n", "/*! node-domexception. MIT License. Jimmy W\u00E4rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n", "import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n", "import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AttributeAction = exports.IgnoreCaseMode = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexports.IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nvar AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.isTraversal = void 0;\nvar types_1 = require(\"./types\");\nvar reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nvar actionTypes = new Map([\n    [126 /* Tilde */, types_1.AttributeAction.Element],\n    [94 /* Circumflex */, types_1.AttributeAction.Start],\n    [36 /* Dollar */, types_1.AttributeAction.End],\n    [42 /* Asterisk */, types_1.AttributeAction.Any],\n    [33 /* ExclamationMark */, types_1.AttributeAction.Not],\n    [124 /* Pipe */, types_1.AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nvar unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal(selector) {\n    switch (selector.type) {\n        case types_1.SelectorType.Adjacent:\n        case types_1.SelectorType.Child:\n        case types_1.SelectorType.Descendant:\n        case types_1.SelectorType.Parent:\n        case types_1.SelectorType.Sibling:\n        case types_1.SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nexports.isTraversal = isTraversal;\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    var high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse(selector) {\n    var subselects = [];\n    var endIndex = parseSelector(subselects, \"\".concat(selector), 0);\n    if (endIndex < selector.length) {\n        throw new Error(\"Unmatched selector: \".concat(selector.slice(endIndex)));\n    }\n    return subselects;\n}\nexports.parse = parse;\nfunction parseSelector(subselects, selector, selectorIndex) {\n    var tokens = [];\n    function getName(offset) {\n        var match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(\"Expected name, found \".concat(selector.slice(selectorIndex)));\n        }\n        var name = match[0];\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        var start = selectorIndex;\n        var counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        var slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type: type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: types_1.SelectorType.Attribute,\n            name: name,\n            action: action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        var firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== types_1.SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: types_1.SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(types_1.SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(types_1.SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(types_1.SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(types_1.SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", types_1.AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", types_1.AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                var name_1 = void 0;\n                var namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name_1 = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name_1 = getName(2);\n                }\n                else {\n                    name_1 = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name_1;\n                        name_1 = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                var action = types_1.AttributeAction.Exists;\n                var possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = types_1.AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                var value = \"\";\n                var ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        var quote = selector.charCodeAt(selectorIndex);\n                        var sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        var valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    var forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                var attributeSelector = {\n                    type: types_1.SelectorType.Attribute,\n                    name: name_1,\n                    action: action,\n                    value: value,\n                    namespace: namespace,\n                    ignoreCase: ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: types_1.SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                var name_2 = getName(1).toLowerCase();\n                var data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name_2)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(\"Pseudo-selector \".concat(name_2, \" cannot be quoted\"));\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(\"Missing closing parenthesis in :\".concat(name_2, \" (\").concat(selector, \")\"));\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name_2)) {\n                            var quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: types_1.SelectorType.Pseudo, name: name_2, data: data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    var endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                var namespace = null;\n                var name_3 = void 0;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name_3 = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name_3 = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(types_1.SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name_3 = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name_3;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name_3 = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name_3 = getName(1);\n                    }\n                }\n                tokens.push(name_3 === \"*\"\n                    ? { type: types_1.SelectorType.Universal, namespace: namespace }\n                    : { type: types_1.SelectorType.Tag, name: name_3, namespace: namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringify = void 0;\nvar types_1 = require(\"./types\");\nvar attribValChars = [\"\\\\\", '\"'];\nvar pseudoValChars = __spreadArray(__spreadArray([], attribValChars, true), [\"(\", \")\"], false);\nvar charsToEscapeInAttributeValue = new Set(attribValChars.map(function (c) { return c.charCodeAt(0); }));\nvar charsToEscapeInPseudoValue = new Set(pseudoValChars.map(function (c) { return c.charCodeAt(0); }));\nvar charsToEscapeInName = new Set(__spreadArray(__spreadArray([], pseudoValChars, true), [\n    \"~\",\n    \"^\",\n    \"$\",\n    \"*\",\n    \"+\",\n    \"!\",\n    \"|\",\n    \":\",\n    \"[\",\n    \"]\",\n    \" \",\n    \".\",\n], false).map(function (c) { return c.charCodeAt(0); }));\n/**\n * Turns `selector` back into a string.\n *\n * @param selector Selector to stringify.\n */\nfunction stringify(selector) {\n    return selector\n        .map(function (token) { return token.map(stringifyToken).join(\"\"); })\n        .join(\", \");\n}\nexports.stringify = stringify;\nfunction stringifyToken(token, index, arr) {\n    switch (token.type) {\n        // Simple types\n        case types_1.SelectorType.Child:\n            return index === 0 ? \"> \" : \" > \";\n        case types_1.SelectorType.Parent:\n            return index === 0 ? \"< \" : \" < \";\n        case types_1.SelectorType.Sibling:\n            return index === 0 ? \"~ \" : \" ~ \";\n        case types_1.SelectorType.Adjacent:\n            return index === 0 ? \"+ \" : \" + \";\n        case types_1.SelectorType.Descendant:\n            return \" \";\n        case types_1.SelectorType.ColumnCombinator:\n            return index === 0 ? \"|| \" : \" || \";\n        case types_1.SelectorType.Universal:\n            // Return an empty string if the selector isn't needed.\n            return token.namespace === \"*\" &&\n                index + 1 < arr.length &&\n                \"name\" in arr[index + 1]\n                ? \"\"\n                : \"\".concat(getNamespace(token.namespace), \"*\");\n        case types_1.SelectorType.Tag:\n            return getNamespacedName(token);\n        case types_1.SelectorType.PseudoElement:\n            return \"::\".concat(escapeName(token.name, charsToEscapeInName)).concat(token.data === null\n                ? \"\"\n                : \"(\".concat(escapeName(token.data, charsToEscapeInPseudoValue), \")\"));\n        case types_1.SelectorType.Pseudo:\n            return \":\".concat(escapeName(token.name, charsToEscapeInName)).concat(token.data === null\n                ? \"\"\n                : \"(\".concat(typeof token.data === \"string\"\n                    ? escapeName(token.data, charsToEscapeInPseudoValue)\n                    : stringify(token.data), \")\"));\n        case types_1.SelectorType.Attribute: {\n            if (token.name === \"id\" &&\n                token.action === types_1.AttributeAction.Equals &&\n                token.ignoreCase === \"quirks\" &&\n                !token.namespace) {\n                return \"#\".concat(escapeName(token.value, charsToEscapeInName));\n            }\n            if (token.name === \"class\" &&\n                token.action === types_1.AttributeAction.Element &&\n                token.ignoreCase === \"quirks\" &&\n                !token.namespace) {\n                return \".\".concat(escapeName(token.value, charsToEscapeInName));\n            }\n            var name_1 = getNamespacedName(token);\n            if (token.action === types_1.AttributeAction.Exists) {\n                return \"[\".concat(name_1, \"]\");\n            }\n            return \"[\".concat(name_1).concat(getActionValue(token.action), \"=\\\"\").concat(escapeName(token.value, charsToEscapeInAttributeValue), \"\\\"\").concat(token.ignoreCase === null ? \"\" : token.ignoreCase ? \" i\" : \" s\", \"]\");\n        }\n    }\n}\nfunction getActionValue(action) {\n    switch (action) {\n        case types_1.AttributeAction.Equals:\n            return \"\";\n        case types_1.AttributeAction.Element:\n            return \"~\";\n        case types_1.AttributeAction.Start:\n            return \"^\";\n        case types_1.AttributeAction.End:\n            return \"$\";\n        case types_1.AttributeAction.Any:\n            return \"*\";\n        case types_1.AttributeAction.Not:\n            return \"!\";\n        case types_1.AttributeAction.Hyphen:\n            return \"|\";\n        case types_1.AttributeAction.Exists:\n            throw new Error(\"Shouldn't be here\");\n    }\n}\nfunction getNamespacedName(token) {\n    return \"\".concat(getNamespace(token.namespace)).concat(escapeName(token.name, charsToEscapeInName));\n}\nfunction getNamespace(namespace) {\n    return namespace !== null\n        ? \"\".concat(namespace === \"*\"\n            ? \"*\"\n            : escapeName(namespace, charsToEscapeInName), \"|\")\n        : \"\";\n}\nfunction escapeName(str, charsToEscape) {\n    var lastIdx = 0;\n    var ret = \"\";\n    for (var i = 0; i < str.length; i++) {\n        if (charsToEscape.has(str.charCodeAt(i))) {\n            ret += \"\".concat(str.slice(lastIdx, i), \"\\\\\").concat(str.charAt(i));\n            lastIdx = i + 1;\n        }\n    }\n    return ret.length > 0 ? ret + str.slice(lastIdx) : str;\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringify = exports.parse = exports.isTraversal = void 0;\n__exportStar(require(\"./types\"), exports);\nvar parse_1 = require(\"./parse\");\nObject.defineProperty(exports, \"isTraversal\", { enumerable: true, get: function () { return parse_1.isTraversal; } });\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parse_1.parse; } });\nvar stringify_1 = require(\"./stringify\");\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return stringify_1.stringify; } });\n", "module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};", "/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n", null, "\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n", "export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n", "\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n", "/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n", "/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n", "const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n", "/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n", "/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// \u00A75.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// \u00A75.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// \u00A75.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n", "export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n", "import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy \u00A78.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy \u00A73. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy \u00A73.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy \u00A73.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing \u00A73.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy \u00A78.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy \u00A78.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response\u2019s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in \u00A7 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n", "import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n", null, null, null, "/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n", "import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n", "import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n", null, null, null, null, null, null, null, "export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n", "/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map", "import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map", null, null, null, null, null, "import fetch from \"node-fetch\"\nimport * as cheerio from 'cheerio'\n\nexports.handler = async function (event) {\n  return await fetch('https://www.last.fm/user/maliMirkec')\n    .then((response) => response.text())\n    .then((data) => {\n      const $ = cheerio.load(data)\n      let tracks = []\n\n      $('.chartlist-row--with-artist').each((i,row) => {\n        tracks.push({\n          track: $(row).find('.chartlist-name').text().trim(),\n          artist: $(row).find('.chartlist-artist').text().trim(),\n          trackUrl: `https://www.last.fm${$(row).find('.chartlist-name a').attr('href')}`\n        })\n      })\n\n      return {\n        statusCode: 200,\n        body: JSON.stringify(tracks),\n        headers: {\n          \"content-type\": \"text\"\n        }\n      }\n    })\n}\n"],
  "mappings": "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W,CAAC,GAAE,WAAU,CAAC,GAAE,gBAAe,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,UAAS,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,UAAS,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,WAAU,CAAC,GAAE,UAAS,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,WAAU,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,WAAU,CAAC,GAAE,WAAU,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,WAAU,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,UAAS,CAAC,GAAE,UAAS,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YAAW,CAAC,GAAE,YAAW,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,aAAY,CAAC,GAAE,YA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",
  "names": []
}

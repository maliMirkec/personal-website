// Helpers
//
// Markup: _helpers.html
//
// Weight: 500
//
// Styleguide Helpers

@function strip-unit($value) {
  @return #{$value / ($value * 0 + 1)};
}

html {
  scroll-behavior: smooth;
}

body {
  scrollbar-color: var(--color-alpha) var(--color-alpha-lighter);

  &::-webkit-scrollbar {
    width: var(--snap-inline);
    height: var(--snap-inline);
  }

  &::-webkit-scrollbar-thumb {
    background: var(--color-alpha);
  }

  &::-webkit-scrollbar-track {
    background: var(--color-alpha-lighter);
  }
}

img {
  display: block;
  max-width: 100%;
  height: auto;
  margin: 0 auto;
}

.pic {
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;

  img {
    width: 100%;
    border-radius: var(--border-radius);

    &:not([src]) {
      display: none;
    }
  }
}

.glow {
  &:hover,
  &:focus {
    background-color: transparent;
  }
}

.wrapper {
  margin-left: auto;
  margin-right: auto;

  &:not([class*="wrapper--"]) {
    max-width: calc(var(--bp) + 2rem);
  }
}

.wrapper--alpha {
  @include mq($from: bp2) {
    max-width: calc(var(--bp2) + 2rem);
  }

  @include mq($from: bp3) {
    max-width: calc(var(--bp3) + 2rem);
  }
}

.wrapper--beta {
  @include mq($from: bp2) {
    max-width: calc(var(--bp2) + 2rem);
  }
}

.wrapper--gamma {
  max-width: calc(var(--bp1) + 2rem);
}

.brad {
  border-radius: var(--border-radius);
}

.brad-alpha {
  border-radius: var(--border-radius-alpha);
}

.db {
  display: block;
}

.dib {
  display: inline-block;
}

.df {
  display: flex;
}

.jcc {
  justify-content: center;
}

.aic {
  align-items: center;
}

.oh {
  overflow: hidden;
}

.vh {
  display: block;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(1px);
  white-space: nowrap;
  position: absolute;
}

hr {
  &:not([class*="hr"]) {
    background-color: currentColor;
    border: 0;
    height: 1px;
  }

  .copy &,
  &[class*="hr"] {
    border: 0;
    max-height: 0;
    position: relative;
    padding-top: 1rem;
    padding-bottom: 1rem;

    &:before {
      content: " â˜… ";
      font-size: var(--step--2);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      text-shadow: -1rem 0 0 currentColor, 1rem 0 0 currentColor;
    }
  }

  .copy & {
    background-color: transparent;
    margin-top: 2rem;
    margin-bottom: 2rem;

    &:before {
      color: inherit;
      opacity: 0.5;
    }
  }
}

p {
  &:empty {
    display: none;
  }
}

@include mq($from: bp1) {
  .hidden-lg {
    display: none;
  }
}

@include mq($until: bp1) {
  .hidden-sm {
    display: none;
  }
}

.tilt {
  transform: skewY(calc(var(--angle) * -1));

  .tilt__inner {
    transform: skewY(var(--angle));
  }
}

.with-slash {
  &:before {
    content: "/";
    display: inline-block;
    line-height: 1;
    position: relative;
    top: -0.1em;
  }
}

.w-auto {
  width: auto;
}

html {
  scroll-behavior: smooth;
}

body {
  color: $color-text;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  padding-left: 1rem;
  padding-right: 1rem;
}

a {
  @include tra(color);
  color: $color-alpha;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active {
    outline-color: $color-gamma;

    &[class] {
      text-decoration: none;
    }

    &:not([class]) {
      text-decoration: underline;
      text-decoration-thickness: from-font;
      text-underline-offset: 0.125em;
    }
  }
}

blockquote {
  background-color: $color-delta;
  color: $color-text;
  margin: 0;
  padding: rem(20) rem(40);

  p {
    margin: 0;
  }

  *:last-child {
    margin-bottom: 0;
  }
}

pre {
  display: block;
  max-width: 100%;
  overflow: auto;
}

main {
  flex: 1 1 auto;

  @include mq($until: desktop) {
    text-align: center;
  }
}

section {
  &:first-child {
    padding-top: rem(100);
  }

  & + & {
    &:before {
      content: "❋ ❋ ❋";
      padding-top: rem(60);
      padding-bottom: rem(60);
      display: flex;
      align-items: center;
      justify-content: center;
      color: $color-delta;
      font-size: ms(-3);
    }
  }

  &:last-of-type {
    margin-bottom: rem(100);
  }

  p {
    margin: .5em 0;
  }

  ul {
    &:not([class]) {
      padding: 0;
      list-style: none;
      text-align: left;

      li {
        display: flex;
        align-items: flex-start;
        margin: .5em 0;

        &.aib {
          align-items: baseline;

          span {
            margin-right: rem(3);
          }
        }

        &:before {
          content: "❋";
          display: inline-block;
          margin-right: .25em;
          transform: scale(.6);
        }

        p {
          margin: 0;
        }
      }
    }
  }
}

.table {
  overflow-x: auto;
  overflow-y: hidden;
  box-shadow: .25rem 0 1rem -0.5rem $color-delta inset, -.25rem 0 1rem -0.5rem $color-delta inset;
}

table {
  flex: 1 1 100%;
  width: 100%;
  max-width: calc(100% - 2px);
  font-size: ms(-1);
  text-align: left;

  th,
  td {
    border: rem(1) solid $color-delta;
    padding: rem(3) rem(5);
    vertical-align: top;
    white-space: nowrap;
  }

  @include mq($until: mobile) {
    tr,
    th,
    td {
      display: block;
      border-bottom: 0;
    }
  }
}

.iframe {
  position: relative;
  max-height: 0;
  padding-bottom: 100%;
  box-shadow: 0 0 0 rem(1) $color-delta;
  background-color: $color-psi;

  & + & {
    margin-top: 4em;
  }

  iframe {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    max-height: calc(100% - #{rem(2px)});
    max-width: calc(100% - #{rem(2px)});
  }

  @include mq($from: mobile) {
    padding-bottom: 56.25%;
  }
}

img {
  max-width: 100%;
}

.link {
  display: inline-flex;
  align-items: center;
  background-color: $color-beta;
  color: $color-text;
  padding: rem(10) rem(30);
  box-shadow: 0 0 0 rem(1) $color-omega, 0 0 0 rem(3) $color-beta;
  font-size: ms(-1);
  font-weight: bold;
  text-transform: uppercase;
  position: relative;
  left: rem(3);
  margin-top: rem(30);
  border-radius: rem(3);

  &:after {
    content: "⤑";
    font-size: ms(0);
    line-height: 1;
    position: relative;
    top: rem(-2);
    margin-left: rem(10);
  }

  &:hover,
  &:focus,
  &:active {
    box-shadow: 0 0 0 rem(1) $color-omega, 0 0 0 rem(3) $color-text;
  }
}

[class*="href"] {
  display: inline-block;
  padding: 0 rem(3);
  position: relative;
  left: rem(-3);
  border: rem(1) dotted transparent;
  border-radius: rem(3);
  word-break: break-word;
  cursor: pointer;
  @include tra(transform);

  &:after {
    content: "⇢";
    display: inline-block;
    margin-left: rem(6);
  }

  &:hover,
  &:focus,
  &:active {
    border-color: currentColor;
    transform: translateX(rem(3));
  }
}

[class*="static"] {
  &:hover,
  &:focus,
  &:active {
    transform: none;
  }
}

.notarget,
.target {
  position: relative;

  span {
    &:last-of-type:not(:only-child) {
      font-family: $font-alpha;
      margin-left: .33em;
      text-transform: none;
    }
  }
}

.target {
  color: inherit;

  &:after {
    content: "#";
    margin-left: .33em;
    font-family: $font-alpha;
    font-weight: bold;
    line-height: 1.25em;
    color: $color-delta;
  }

  &:hover,
  &:focus,
  &:active,
  :target & {
    text-decoration: none;

    &:after {
      color: $color-beta;
      text-shadow: none;
    }
  }
}

.inline {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  list-style: none;
  padding: 0;

  > li {
    flex: 0 0 33%;

    @include mq($until: desktop) {
      flex: 1 1 50%;
    }
  }

  a {
    padding: .75em 1em;
    white-space: nowrap;
  }

  b {
    margin-right: .5em;
  }
}

.reads {
  font-size: ms(3);
  font-weight: bold;
  padding: rem(5) rem(15);
  left: rem(-15);

  &:hover,
  &:focus,
  &:active {
    transform: translateX(rem(15));
  }
}

.skip {
  display: flex;
  height: rem(1);
  width: rem(1);
  overflow: hidden;
  clip: rect(rem(1), rem(1), rem(1), rem(1));
  clip-path: inset(rem(1));
  white-space: nowrap;
  position: fixed;
  top: 0;
  left: 0;

  span {
    padding: rem(5) rem(10);
  }

  &:focus {
    background-color: $color-gamma;
    color: $color-text;
    clip: auto;
    height: auto;
    width: auto;
    text-decoration: none;
  }
}

.tag {
  position: relative;
  background-color: $color-delta;
  border: rem(2) solid $color-beta;
  border-radius: rem(4);
  display: inline-flex;
  padding: rem(2) rem(8);
  font-size: ms(-2);
  font-weight: bold;
}
